[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Quarto Blog",
    "section": "",
    "text": "Simple Visualisation\n\n\n\n\n\n\nML\n\n\n\n\n\n\n\n\n\nFeb 14, 2025\n\n\nArav Patil\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome\n\n\n\n\n\nWelcome Post\n\n\n\n\n\nFeb 14, 2025\n\n\nNipun Batra\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/welcome.html",
    "href": "posts/welcome.html",
    "title": "Welcome",
    "section": "",
    "text": "Welcome\nHello world, this is my first blog post.\nI can write in markdown\nprint(\"Hello World\")\nI can also write math equations:\n\\[\ny = x^2\n\\]\nI can create lists easily:\n\nOne\nTwo\n\nI can also create numbered lists:\n\nOne\nTwo\n\nOr, create a table:\n\n\n\nName\nAge\n\n\n\n\nAlice\n20\n\n\nBob\n21"
  },
  {
    "objectID": "posts/J018_Exposition.html",
    "href": "posts/J018_Exposition.html",
    "title": "Quarto Template",
    "section": "",
    "text": "---\nauthor: Arav Patil\nbadges: true\ncategories:\n- ML\ndate: '2025-02-14'\ntitle: Simple Visualisation\ntoc: true\n---\n\nERROR: Error in parse(text = input): &lt;text&gt;:2:14: unexpected symbol\n1: ---\n2: author: Arav Patil\n                ^\n\nError in parse(text = input): &lt;text&gt;:2:14: unexpected symbol\n1: ---\n2: author: Arav Patil\n                ^\nTraceback:\n\n\n\nlibrary(dplyr) #Importing the required library\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\n\nUSE CASES\n\nExploratory Data Analysis (EDA)\n\nEDA is the process of understanding and summarizing datasets before applying further analysis.\nLet’s take a look at this using an example.\n\n#Consider we have a dataset 'customers_data', that we wish to analyze.\n\ncustomers_data &lt;- data.frame(\n  customer_id = 1:20,  # Unique customer IDs\n  age = c(25, 34, 22, 45, 54, 31, 29, 38, 40, 27, \n          33, 50, 23, 44, 37, 41, 48, 30, 26, 39), # Age of customers\n  gender = c(\"Male\", \"Female\", \"Male\", \"Female\", \"Male\", \"Female\", \"Male\", \n             \"Female\", \"Male\", \"Female\", \"Male\", \"Female\", \"Male\", \"Female\", \n             \"Male\", \"Female\", \"Male\", \"Female\", \"Male\", \"Female\"), # Gender\n  spending = c(500, 700, 300, 1000, 200, 450, 650, 800, 950, 720,\n               680, 900, 300, 400, 750, 850, 1200, 500, 310, 600), # Spending amount\n  location = c(\"New York\", \"Los Angeles\", \"Chicago\", \"Houston\", \"Phoenix\", \n               \"Philadelphia\", \"San Antonio\", \"San Diego\", \"Dallas\", \"San Jose\",\n               \"Austin\", \"Jacksonville\", \"Fort Worth\", \"Columbus\", \"Charlotte\", \n               \"Indianapolis\", \"Seattle\", \"Denver\", \"Washington\", \"Boston\") # City\n)\n\n#Viewing the first few rows of that data frame. \nhead(customers_data)\n\n\nA data.frame: 6 × 5\n\n\n\ncustomer_id\nage\ngender\nspending\nlocation\n\n\n\n&lt;int&gt;\n&lt;dbl&gt;\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;chr&gt;\n\n\n\n\n1\n1\n25\nMale\n500\nNew York\n\n\n2\n2\n34\nFemale\n700\nLos Angeles\n\n\n3\n3\n22\nMale\n300\nChicago\n\n\n4\n4\n45\nFemale\n1000\nHouston\n\n\n5\n5\n54\nMale\n200\nPhoenix\n\n\n6\n6\n31\nFemale\n450\nPhiladelphia\n\n\n\n\n\n\n#Function 1: Checking the data summary:\nsummary(customers_data)\n\n  customer_id         age           gender             spending     \n Min.   : 1.00   Min.   :22.00   Length:20          Min.   : 200.0  \n 1st Qu.: 5.75   1st Qu.:28.50   Class :character   1st Qu.: 437.5  \n Median :10.50   Median :35.50   Mode  :character   Median : 665.0  \n Mean   :10.50   Mean   :35.80                      Mean   : 638.0  \n 3rd Qu.:15.25   3rd Qu.:41.75                      3rd Qu.: 812.5  \n Max.   :20.00   Max.   :54.00                      Max.   :1200.0  \n   location        \n Length:20         \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n\n\n\n#Function 2: We can also find the missing values using 1 line of code!\n\ncustomers_data %&gt;% summarise_all(~sum(is.na(.)))\n\n\nA data.frame: 1 × 5\n\n\ncustomer_id\nage\ngender\nspending\nlocation\n\n\n&lt;int&gt;\n&lt;int&gt;\n&lt;int&gt;\n&lt;int&gt;\n&lt;int&gt;\n\n\n\n\n0\n0\n0\n0\n0\n\n\n\n\n\nIt doesn’t have any missing values :)\n\n#Function 3: We can also check the age distribution (any distri. for that matter)\n\ncustomers_data %&gt;% \n  group_by(age) %&gt;% \n  summarise(count = n()) %&gt;% \n  arrange(desc(count))\n\n\nA tibble: 20 × 2\n\n\nage\ncount\n\n\n&lt;dbl&gt;\n&lt;int&gt;\n\n\n\n\n22\n1\n\n\n23\n1\n\n\n25\n1\n\n\n26\n1\n\n\n27\n1\n\n\n29\n1\n\n\n30\n1\n\n\n31\n1\n\n\n33\n1\n\n\n34\n1\n\n\n37\n1\n\n\n38\n1\n\n\n39\n1\n\n\n40\n1\n\n\n41\n1\n\n\n44\n1\n\n\n45\n1\n\n\n48\n1\n\n\n50\n1\n\n\n54\n1\n\n\n\n\n\n\n#Function 4: Let's say we wish to analyze spendings by gender and find the top spending customers.\n\ncustomers_data %&gt;% \n  group_by(gender) %&gt;% \n  summarise(avg_spending = mean(spending, na.rm = TRUE))\n\ncustomers_data %&gt;% \n  arrange(desc(spending)) %&gt;% \n  head(10) #prints the top 10 consumers\n\n\nA tibble: 2 × 2\n\n\ngender\navg_spending\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n\n\n\n\nFemale\n692\n\n\nMale\n584\n\n\n\n\n\n\nA data.frame: 10 × 5\n\n\n\ncustomer_id\nage\ngender\nspending\nlocation\n\n\n\n&lt;int&gt;\n&lt;dbl&gt;\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;chr&gt;\n\n\n\n\n1\n17\n48\nMale\n1200\nSeattle\n\n\n2\n4\n45\nFemale\n1000\nHouston\n\n\n3\n9\n40\nMale\n950\nDallas\n\n\n4\n12\n50\nFemale\n900\nJacksonville\n\n\n5\n16\n41\nFemale\n850\nIndianapolis\n\n\n6\n8\n38\nFemale\n800\nSan Diego\n\n\n7\n15\n37\nMale\n750\nCharlotte\n\n\n8\n10\n27\nFemale\n720\nSan Jose\n\n\n9\n2\n34\nFemale\n700\nLos Angeles\n\n\n10\n11\n33\nMale\n680\nAustin\n\n\n\n\n\n\nBusiness Analytics\nBusiness analytics helps companies make data-driven decisions by analyzing revenue, sales trends, and profits.\n\n\n#Consider a dataset 'sales_data', we can perform data analysis on it.\n\nsales_data &lt;- data.frame(\n  date = as.Date(c(\"2024-01-01\", \"2024-01-02\", \"2024-01-03\", \"2024-01-04\", \"2024-01-05\", \n                   \"2024-01-06\", \"2024-01-07\", \"2024-01-08\", \"2024-01-09\", \"2024-01-10\",\n                   \"2024-01-11\", \"2024-01-12\", \"2024-01-13\", \"2024-01-14\", \"2024-01-15\",\n                   \"2024-01-16\", \"2024-01-17\", \"2024-01-18\", \"2024-01-19\", \"2024-01-20\")),\n  product = c(\"Laptop\", \"Smartphone\", \"Tablet\", \"Smartwatch\", \"Headphones\",\n              \"Laptop\", \"Smartphone\", \"Tablet\", \"Smartwatch\", \"Headphones\",\n              \"Laptop\", \"Smartphone\", \"Tablet\", \"Smartwatch\", \"Headphones\",\n              \"Laptop\", \"Smartphone\", \"Tablet\", \"Smartwatch\", \"Headphones\"),\n  category = c(\"Electronics\", \"Electronics\", \"Electronics\", \"Wearables\", \"Accessories\",\n               \"Electronics\", \"Electronics\", \"Electronics\", \"Wearables\", \"Accessories\",\n               \"Electronics\", \"Electronics\", \"Electronics\", \"Wearables\", \"Accessories\",\n               \"Electronics\", \"Electronics\", \"Electronics\", \"Wearables\", \"Accessories\"),\n  region = c(\"North\", \"South\", \"East\", \"West\", \"North\",\n             \"South\", \"East\", \"West\", \"North\", \"South\",\n             \"East\", \"West\", \"North\", \"South\", \"East\",\n             \"West\", \"North\", \"South\", \"East\", \"West\"),\n  sales = c(1500, 2000, 1200, 800, 500,\n            1600, 2100, 1300, 900, 600,\n            1700, 2200, 1400, 1000, 700,\n            1800, 2300, 1500, 1100, 800),\n  profit = c(300, 400, 250, 100, 80,\n             320, 420, 260, 120, 90,\n             350, 450, 270, 130, 100,\n             380, 470, 280, 140, 120)\n)\n\n# Prints the first few rows of the dataset.\nhead(sales_data)\n\n\nA data.frame: 6 × 6\n\n\n\ndate\nproduct\ncategory\nregion\nsales\nprofit\n\n\n\n&lt;date&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n2024-01-01\nLaptop\nElectronics\nNorth\n1500\n300\n\n\n2\n2024-01-02\nSmartphone\nElectronics\nSouth\n2000\n400\n\n\n3\n2024-01-03\nTablet\nElectronics\nEast\n1200\n250\n\n\n4\n2024-01-04\nSmartwatch\nWearables\nWest\n800\n100\n\n\n5\n2024-01-05\nHeadphones\nAccessories\nNorth\n500\n80\n\n\n6\n2024-01-06\nLaptop\nElectronics\nSouth\n1600\n320\n\n\n\n\n\n\n#Analysis 1: Best selling product.\n\nsales_data %&gt;% \n  group_by(product) %&gt;% \n  summarise(total_sales = sum(sales)) %&gt;% \n  arrange(desc(total_sales)) %&gt;% \n  head(5) #Top 5 best-selling products.\n\n\nA tibble: 5 × 2\n\n\nproduct\ntotal_sales\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n\n\n\n\nSmartphone\n8600\n\n\nLaptop\n6600\n\n\nTablet\n5400\n\n\nSmartwatch\n3800\n\n\nHeadphones\n2600\n\n\n\n\n\n\n#Analysis 2: Monthly sales trend.\n\nsales_data %&gt;% \n  mutate(month = format(as.Date(date), \"%Y-%m\")) %&gt;%  # Extract year-month\n  group_by(month) %&gt;% \n  summarise(total_sales = sum(sales)) %&gt;% \n  arrange(month)\n\n\nA tibble: 1 × 2\n\n\nmonth\ntotal_sales\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n\n\n\n\n2024-01\n27000\n\n\n\n\n\n\n#Analysis 3: Best performing regions\n\nsales_data %&gt;% \n  group_by(region) %&gt;% \n  summarise(total_sales = sum(sales), total_profit = sum(profit)) %&gt;% \n  arrange(desc(total_sales))\n\n\nA tibble: 4 × 3\n\n\nregion\ntotal_sales\ntotal_profit\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nWest\n6900\n1310\n\n\nEast\n6800\n1260\n\n\nSouth\n6700\n1220\n\n\nNorth\n6600\n1240\n\n\n\n\n\n\n#Analysis 4: Category-wise sales breakdown\n\nsales_data %&gt;% \n  group_by(category) %&gt;% \n  summarise(total_sales = sum(sales)) %&gt;% \n  arrange(desc(total_sales))\n\n\nA tibble: 3 × 2\n\n\ncategory\ntotal_sales\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n\n\n\n\nElectronics\n20600\n\n\nWearables\n3800\n\n\nAccessories\n2600\n\n\n\n\n\n\nHealthcare and Epidemiology Analysis\nHealthcare and epidemiology analytics help in monitoring patient records, disease outbreaks, and hospital efficiency.\n\n\n#As an example, we will do patient-data anlysis, consider a dataset 'hospital_data'.\n\nhospital_data &lt;- data.frame(\n  patient_id = 1:20,  # Unique patient IDs\n  age = c(45, 67, 23, 56, 34, 78, 54, 61, 29, 50, \n          68, 40, 33, 71, 25, 80, 58, 47, 62, 38),  # Age of patients\n  gender = c(\"Male\", \"Female\", \"Male\", \"Female\", \"Male\", \"Female\", \"Male\", \n             \"Female\", \"Male\", \"Female\", \"Male\", \"Female\", \"Male\", \"Female\", \n             \"Male\", \"Female\", \"Male\", \"Female\", \"Male\", \"Female\"),  # Gender\n  disease = c(\"Diabetes\", \"Hypertension\", \"Asthma\", \"Heart Disease\", \"Diabetes\",\n              \"Hypertension\", \"Asthma\", \"Heart Disease\", \"Diabetes\", \"Hypertension\",\n              \"Asthma\", \"Heart Disease\", \"Diabetes\", \"Hypertension\", \"Asthma\", \n              \"Heart Disease\", \"Diabetes\", \"Hypertension\", \"Asthma\", \"Heart Disease\"),  # Disease category\n  hospital = c(\"General Hospital\", \"City Hospital\", \"General Hospital\", \"City Hospital\",\n               \"General Hospital\", \"City Hospital\", \"General Hospital\", \"City Hospital\",\n               \"General Hospital\", \"City Hospital\", \"General Hospital\", \"City Hospital\",\n               \"General Hospital\", \"City Hospital\", \"General Hospital\", \"City Hospital\",\n               \"General Hospital\", \"City Hospital\", \"General Hospital\", \"City Hospital\"),  # Hospital name\n  stay_length = c(5, 7, 3, 10, 4, 6, 2, 8, 5, 9, \n                  7, 4, 3, 6, 2, 11, 8, 5, 6, 3),  # Number of days admitted\n  treatment_cost = c(1500, 2500, 1200, 5000, 1800, 2700, 1100, 4500, 1600, 3000,\n                     2200, 4000, 1400, 2800, 1300, 5500, 2900, 2100, 3200, 1700)  # Cost of treatment\n)\n\n# Viewing the first few rows of the dataset\nhead(hospital_data)\n\n\nA data.frame: 6 × 7\n\n\n\npatient_id\nage\ngender\ndisease\nhospital\nstay_length\ntreatment_cost\n\n\n\n&lt;int&gt;\n&lt;dbl&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n1\n45\nMale\nDiabetes\nGeneral Hospital\n5\n1500\n\n\n2\n2\n67\nFemale\nHypertension\nCity Hospital\n7\n2500\n\n\n3\n3\n23\nMale\nAsthma\nGeneral Hospital\n3\n1200\n\n\n4\n4\n56\nFemale\nHeart Disease\nCity Hospital\n10\n5000\n\n\n5\n5\n34\nMale\nDiabetes\nGeneral Hospital\n4\n1800\n\n\n6\n6\n78\nFemale\nHypertension\nCity Hospital\n6\n2700\n\n\n\n\n\n\n#Analysis 1: Finding average hospital stay by disease.\n# This helps in identifying diseases that require longer hospitalization.\n\nhospital_data %&gt;% \n  group_by(disease) %&gt;% \n  summarise(avg_stay = mean(stay_length))\n\n\nA tibble: 4 × 2\n\n\ndisease\navg_stay\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n\n\n\n\nAsthma\n4.0\n\n\nDiabetes\n5.0\n\n\nHeart Disease\n7.2\n\n\nHypertension\n6.6\n\n\n\n\n\n\n#Analysis 2: Total treatment cost by hospital.\n# This helps analyze which hospitals have the highest treatment expenses.\n\nhospital_data %&gt;% \n  group_by(hospital) %&gt;% \n  summarise(total_cost = sum(treatment_cost)) %&gt;% \n  arrange(desc(total_cost))\n\n\nA tibble: 2 × 2\n\n\nhospital\ntotal_cost\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n\n\n\n\nCity Hospital\n33800\n\n\nGeneral Hospital\n18200\n\n\n\n\n\n\n#Analysis 3: Gender-wise average treatment cost.\n# This can reveal trends in treatment costs between male and female patients.\n\nhospital_data %&gt;% \n  group_by(gender) %&gt;% \n  summarise(avg_cost = mean(treatment_cost))\n\n\nA tibble: 2 × 2\n\n\ngender\navg_cost\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n\n\n\n\nFemale\n3380\n\n\nMale\n1820\n\n\n\n\n\n\n#Analysis 4: Most commonly treated diseases.\n# This shows the frequency of different diseases in the dataset.\nhospital_data %&gt;% \n  count(disease) %&gt;% \n  arrange(desc(n))\n\n\nA data.frame: 4 × 2\n\n\ndisease\nn\n\n\n&lt;chr&gt;\n&lt;int&gt;\n\n\n\n\nAsthma\n5\n\n\nDiabetes\n5\n\n\nHeart Disease\n5\n\n\nHypertension\n5\n\n\n\n\n\n\nGeospatial analysis\nGeospatial analysis involves studying location-based data to identify trends, patterns, and relationships across different regions.\n\n\n#As an example, we will do air pollution anaylsis. For which, consider a dataset 'air_quality_data'\n\nair_quality_data &lt;- data.frame(\n  city = c(\"New York\", \"Los Angeles\", \"Chicago\", \"Houston\", \"Phoenix\", \n           \"Philadelphia\", \"San Antonio\", \"San Diego\", \"Dallas\", \"San Jose\"),\n  state = c(\"NY\", \"CA\", \"IL\", \"TX\", \"AZ\", \"PA\", \"TX\", \"CA\", \"TX\", \"CA\"),\n  latitude = c(40.71, 34.05, 41.87, 29.76, 33.44, 39.95, 29.42, 32.71, 32.78, 37.33),\n  longitude = c(-74.01, -118.24, -87.62, -95.37, -112.07, -75.17, -98.49, -117.16, -96.80, -121.88),\n  pm2_5 = c(12, 25, 18, 30, 22, 15, 35, 20, 28, 14),  # Fine particulate matter\n  pm10 = c(30, 50, 40, 55, 45, 35, 65, 38, 52, 33),  # Larger particulate matter\n  aqi = c(45, 110, 70, 130, 95, 55, 150, 78, 125, 48)  # Air Quality Index\n)\n\n# Viewing the first few rows of the dataset\nhead(air_quality_data)\n\n\nA data.frame: 6 × 7\n\n\n\ncity\nstate\nlatitude\nlongitude\npm2_5\npm10\naqi\n\n\n\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\nNew York\nNY\n40.71\n-74.01\n12\n30\n45\n\n\n2\nLos Angeles\nCA\n34.05\n-118.24\n25\n50\n110\n\n\n3\nChicago\nIL\n41.87\n-87.62\n18\n40\n70\n\n\n4\nHouston\nTX\n29.76\n-95.37\n30\n55\n130\n\n\n5\nPhoenix\nAZ\n33.44\n-112.07\n22\n45\n95\n\n\n6\nPhiladelphia\nPA\n39.95\n-75.17\n15\n35\n55\n\n\n\n\n\n\n#Analysis 1: Average PM2.5 and PM10 levels by state, and cities with worst air quality.\n\n# This helps in understanding air quality trends at the state level as well as \n# identifying cities with worst air quality.\n\nair_quality_data %&gt;% \n  group_by(state) %&gt;% \n  summarise(avg_pm2_5 = mean(pm2_5), avg_pm10 = mean(pm10))\n\nair_quality_data %&gt;% \n  arrange(desc(aqi)) %&gt;% \n  head(5) #Top 5\n\n\nA tibble: 6 × 3\n\n\nstate\navg_pm2_5\navg_pm10\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nAZ\n22.00000\n45.00000\n\n\nCA\n19.66667\n40.33333\n\n\nIL\n18.00000\n40.00000\n\n\nNY\n12.00000\n30.00000\n\n\nPA\n15.00000\n35.00000\n\n\nTX\n31.00000\n57.33333\n\n\n\n\n\n\nA data.frame: 5 × 7\n\n\n\ncity\nstate\nlatitude\nlongitude\npm2_5\npm10\naqi\n\n\n\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\nSan Antonio\nTX\n29.42\n-98.49\n35\n65\n150\n\n\n2\nHouston\nTX\n29.76\n-95.37\n30\n55\n130\n\n\n3\nDallas\nTX\n32.78\n-96.80\n28\n52\n125\n\n\n4\nLos Angeles\nCA\n34.05\n-118.24\n25\n50\n110\n\n\n5\nPhoenix\nAZ\n33.44\n-112.07\n22\n45\n95\n\n\n\n\n\n\n#Analysis 2: Correlation between PM2.5 and AQI.\n# This checks how strongly PM2.5 is related to overall air quality.\n\nair_quality_data %&gt;% \n  summarise(correlation = cor(pm2_5, aqi))\n\n\nA data.frame: 1 × 1\n\n\ncorrelation\n\n\n&lt;dbl&gt;\n\n\n\n\n0.9953044\n\n\n\n\n\n\n#Analysis 3: State-wise worst polluted city.\n\nair_quality_data %&gt;% \n  group_by(state) %&gt;% \n  filter(aqi == max(aqi))\n\n\nA grouped_df: 6 × 7\n\n\ncity\nstate\nlatitude\nlongitude\npm2_5\npm10\naqi\n\n\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nNew York\nNY\n40.71\n-74.01\n12\n30\n45\n\n\nLos Angeles\nCA\n34.05\n-118.24\n25\n50\n110\n\n\nChicago\nIL\n41.87\n-87.62\n18\n40\n70\n\n\nPhoenix\nAZ\n33.44\n-112.07\n22\n45\n95\n\n\nPhiladelphia\nPA\n39.95\n-75.17\n15\n35\n55\n\n\nSan Antonio\nTX\n29.42\n-98.49\n35\n65\n150\n\n\n\n\n\n\n#Analysis 4: Identifying cities with PM2.5 levels above the safe limit.\n# This filters out cities where PM2.5 levels exceed 25 µg/m³, which is unhealthy.\n\nair_quality_data %&gt;% \n  filter(pm2_5 &gt; 25)\n\n\nA data.frame: 3 × 7\n\n\ncity\nstate\nlatitude\nlongitude\npm2_5\npm10\naqi\n\n\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nHouston\nTX\n29.76\n-95.37\n30\n55\n130\n\n\nSan Antonio\nTX\n29.42\n-98.49\n35\n65\n150\n\n\nDallas\nTX\n32.78\n-96.80\n28\n52\n125"
  },
  {
    "objectID": "posts/visualisation.html",
    "href": "posts/visualisation.html",
    "title": "Simple Visualisation",
    "section": "",
    "text": "import numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\n%config InlineBackend.figure_format = 'retina'\n\n\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\n\nplt.plot(x, y)\n\n\n\n\n\n\n\n\n\nimport pandas as pd"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Quarto Template",
    "section": "",
    "text": "Quarto template Text!"
  }
]