[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "J018’s Blog",
    "section": "",
    "text": "Mastering Data Manipulation in R with dplyr\n\n\n\n\n\n\nData Manipulation\n\n\n\n\n\n\n\n\n\nFeb 14, 2025\n\n\nArav Patil, Prajwal Patil & Abhinav Thakur\n\n\n\n\n\n\n\n\n\n\n\n\nMastering Data Manipulation in R with dplyr\n\n\n\n\n\n\nData Manipulation\n\n\n\n\n\n\n\n\n\nFeb 14, 2025\n\n\nArav Patil, Prajwal Patil & Abhinav Thakur\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/J018_Exposition.html",
    "href": "posts/J018_Exposition.html",
    "title": "Mastering Data Manipulation in R with dplyr",
    "section": "",
    "text": "library(dplyr) #Importing the required library\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\n\nUSE CASES\n\nExploratory Data Analysis (EDA)\n\nEDA is the process of understanding and summarizing datasets before applying further analysis.\nLet’s take a look at this using an example.\n\n#Consider we have a dataset 'customers_data', that we wish to analyze.\n\ncustomers_data &lt;- data.frame(\n  customer_id = 1:20,  # Unique customer IDs\n  age = c(25, 34, 22, 45, 54, 31, 29, 38, 40, 27, \n          33, 50, 23, 44, 37, 41, 48, 30, 26, 39), # Age of customers\n  gender = c(\"Male\", \"Female\", \"Male\", \"Female\", \"Male\", \"Female\", \"Male\", \n             \"Female\", \"Male\", \"Female\", \"Male\", \"Female\", \"Male\", \"Female\", \n             \"Male\", \"Female\", \"Male\", \"Female\", \"Male\", \"Female\"), # Gender\n  spending = c(500, 700, 300, 1000, 200, 450, 650, 800, 950, 720,\n               680, 900, 300, 400, 750, 850, 1200, 500, 310, 600), # Spending amount\n  location = c(\"New York\", \"Los Angeles\", \"Chicago\", \"Houston\", \"Phoenix\", \n               \"Philadelphia\", \"San Antonio\", \"San Diego\", \"Dallas\", \"San Jose\",\n               \"Austin\", \"Jacksonville\", \"Fort Worth\", \"Columbus\", \"Charlotte\", \n               \"Indianapolis\", \"Seattle\", \"Denver\", \"Washington\", \"Boston\") # City\n)\n\n#Viewing the first few rows of that data frame. \nhead(customers_data)\n\n\nA data.frame: 6 × 5\n\n\n\ncustomer_id\nage\ngender\nspending\nlocation\n\n\n\n&lt;int&gt;\n&lt;dbl&gt;\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;chr&gt;\n\n\n\n\n1\n1\n25\nMale\n500\nNew York\n\n\n2\n2\n34\nFemale\n700\nLos Angeles\n\n\n3\n3\n22\nMale\n300\nChicago\n\n\n4\n4\n45\nFemale\n1000\nHouston\n\n\n5\n5\n54\nMale\n200\nPhoenix\n\n\n6\n6\n31\nFemale\n450\nPhiladelphia\n\n\n\n\n\n\n#Function 1: Checking the data summary:\nsummary(customers_data)\n\n  customer_id         age           gender             spending     \n Min.   : 1.00   Min.   :22.00   Length:20          Min.   : 200.0  \n 1st Qu.: 5.75   1st Qu.:28.50   Class :character   1st Qu.: 437.5  \n Median :10.50   Median :35.50   Mode  :character   Median : 665.0  \n Mean   :10.50   Mean   :35.80                      Mean   : 638.0  \n 3rd Qu.:15.25   3rd Qu.:41.75                      3rd Qu.: 812.5  \n Max.   :20.00   Max.   :54.00                      Max.   :1200.0  \n   location        \n Length:20         \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n\n\n\n#Function 2: We can also find the missing values using 1 line of code!\n\ncustomers_data %&gt;% summarise_all(~sum(is.na(.)))\n\n\nA data.frame: 1 × 5\n\n\ncustomer_id\nage\ngender\nspending\nlocation\n\n\n&lt;int&gt;\n&lt;int&gt;\n&lt;int&gt;\n&lt;int&gt;\n&lt;int&gt;\n\n\n\n\n0\n0\n0\n0\n0\n\n\n\n\n\nIt doesn’t have any missing values :)\n\n#Function 3: We can also check the age distribution (any distri. for that matter)\n\ncustomers_data %&gt;% \n  group_by(age) %&gt;% \n  summarise(count = n()) %&gt;% \n  arrange(desc(count))\n\n\nA tibble: 20 × 2\n\n\nage\ncount\n\n\n&lt;dbl&gt;\n&lt;int&gt;\n\n\n\n\n22\n1\n\n\n23\n1\n\n\n25\n1\n\n\n26\n1\n\n\n27\n1\n\n\n29\n1\n\n\n30\n1\n\n\n31\n1\n\n\n33\n1\n\n\n34\n1\n\n\n37\n1\n\n\n38\n1\n\n\n39\n1\n\n\n40\n1\n\n\n41\n1\n\n\n44\n1\n\n\n45\n1\n\n\n48\n1\n\n\n50\n1\n\n\n54\n1\n\n\n\n\n\n\n#Function 4: Let's say we wish to analyze spendings by gender and find the top spending customers.\n\ncustomers_data %&gt;% \n  group_by(gender) %&gt;% \n  summarise(avg_spending = mean(spending, na.rm = TRUE))\n\ncustomers_data %&gt;% \n  arrange(desc(spending)) %&gt;% \n  head(10) #prints the top 10 consumers\n\n\nA tibble: 2 × 2\n\n\ngender\navg_spending\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n\n\n\n\nFemale\n692\n\n\nMale\n584\n\n\n\n\n\n\nA data.frame: 10 × 5\n\n\n\ncustomer_id\nage\ngender\nspending\nlocation\n\n\n\n&lt;int&gt;\n&lt;dbl&gt;\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;chr&gt;\n\n\n\n\n1\n17\n48\nMale\n1200\nSeattle\n\n\n2\n4\n45\nFemale\n1000\nHouston\n\n\n3\n9\n40\nMale\n950\nDallas\n\n\n4\n12\n50\nFemale\n900\nJacksonville\n\n\n5\n16\n41\nFemale\n850\nIndianapolis\n\n\n6\n8\n38\nFemale\n800\nSan Diego\n\n\n7\n15\n37\nMale\n750\nCharlotte\n\n\n8\n10\n27\nFemale\n720\nSan Jose\n\n\n9\n2\n34\nFemale\n700\nLos Angeles\n\n\n10\n11\n33\nMale\n680\nAustin\n\n\n\n\n\n\nBusiness Analytics\nBusiness analytics helps companies make data-driven decisions by analyzing revenue, sales trends, and profits.\n\n\n#Consider a dataset 'sales_data', we can perform data analysis on it.\n\nsales_data &lt;- data.frame(\n  date = as.Date(c(\"2024-01-01\", \"2024-01-02\", \"2024-01-03\", \"2024-01-04\", \"2024-01-05\", \n                   \"2024-01-06\", \"2024-01-07\", \"2024-01-08\", \"2024-01-09\", \"2024-01-10\",\n                   \"2024-01-11\", \"2024-01-12\", \"2024-01-13\", \"2024-01-14\", \"2024-01-15\",\n                   \"2024-01-16\", \"2024-01-17\", \"2024-01-18\", \"2024-01-19\", \"2024-01-20\")),\n  product = c(\"Laptop\", \"Smartphone\", \"Tablet\", \"Smartwatch\", \"Headphones\",\n              \"Laptop\", \"Smartphone\", \"Tablet\", \"Smartwatch\", \"Headphones\",\n              \"Laptop\", \"Smartphone\", \"Tablet\", \"Smartwatch\", \"Headphones\",\n              \"Laptop\", \"Smartphone\", \"Tablet\", \"Smartwatch\", \"Headphones\"),\n  category = c(\"Electronics\", \"Electronics\", \"Electronics\", \"Wearables\", \"Accessories\",\n               \"Electronics\", \"Electronics\", \"Electronics\", \"Wearables\", \"Accessories\",\n               \"Electronics\", \"Electronics\", \"Electronics\", \"Wearables\", \"Accessories\",\n               \"Electronics\", \"Electronics\", \"Electronics\", \"Wearables\", \"Accessories\"),\n  region = c(\"North\", \"South\", \"East\", \"West\", \"North\",\n             \"South\", \"East\", \"West\", \"North\", \"South\",\n             \"East\", \"West\", \"North\", \"South\", \"East\",\n             \"West\", \"North\", \"South\", \"East\", \"West\"),\n  sales = c(1500, 2000, 1200, 800, 500,\n            1600, 2100, 1300, 900, 600,\n            1700, 2200, 1400, 1000, 700,\n            1800, 2300, 1500, 1100, 800),\n  profit = c(300, 400, 250, 100, 80,\n             320, 420, 260, 120, 90,\n             350, 450, 270, 130, 100,\n             380, 470, 280, 140, 120)\n)\n\n# Prints the first few rows of the dataset.\nhead(sales_data)\n\n\nA data.frame: 6 × 6\n\n\n\ndate\nproduct\ncategory\nregion\nsales\nprofit\n\n\n\n&lt;date&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n2024-01-01\nLaptop\nElectronics\nNorth\n1500\n300\n\n\n2\n2024-01-02\nSmartphone\nElectronics\nSouth\n2000\n400\n\n\n3\n2024-01-03\nTablet\nElectronics\nEast\n1200\n250\n\n\n4\n2024-01-04\nSmartwatch\nWearables\nWest\n800\n100\n\n\n5\n2024-01-05\nHeadphones\nAccessories\nNorth\n500\n80\n\n\n6\n2024-01-06\nLaptop\nElectronics\nSouth\n1600\n320\n\n\n\n\n\n\n#Analysis 1: Best selling product.\n\nsales_data %&gt;% \n  group_by(product) %&gt;% \n  summarise(total_sales = sum(sales)) %&gt;% \n  arrange(desc(total_sales)) %&gt;% \n  head(5) #Top 5 best-selling products.\n\n\nA tibble: 5 × 2\n\n\nproduct\ntotal_sales\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n\n\n\n\nSmartphone\n8600\n\n\nLaptop\n6600\n\n\nTablet\n5400\n\n\nSmartwatch\n3800\n\n\nHeadphones\n2600\n\n\n\n\n\n\n#Analysis 2: Monthly sales trend.\n\nsales_data %&gt;% \n  mutate(month = format(as.Date(date), \"%Y-%m\")) %&gt;%  # Extract year-month\n  group_by(month) %&gt;% \n  summarise(total_sales = sum(sales)) %&gt;% \n  arrange(month)\n\n\nA tibble: 1 × 2\n\n\nmonth\ntotal_sales\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n\n\n\n\n2024-01\n27000\n\n\n\n\n\n\n#Analysis 3: Best performing regions\n\nsales_data %&gt;% \n  group_by(region) %&gt;% \n  summarise(total_sales = sum(sales), total_profit = sum(profit)) %&gt;% \n  arrange(desc(total_sales))\n\n\nA tibble: 4 × 3\n\n\nregion\ntotal_sales\ntotal_profit\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nWest\n6900\n1310\n\n\nEast\n6800\n1260\n\n\nSouth\n6700\n1220\n\n\nNorth\n6600\n1240\n\n\n\n\n\n\n#Analysis 4: Category-wise sales breakdown\n\nsales_data %&gt;% \n  group_by(category) %&gt;% \n  summarise(total_sales = sum(sales)) %&gt;% \n  arrange(desc(total_sales))\n\n\nA tibble: 3 × 2\n\n\ncategory\ntotal_sales\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n\n\n\n\nElectronics\n20600\n\n\nWearables\n3800\n\n\nAccessories\n2600\n\n\n\n\n\n\nHealthcare and Epidemiology Analysis\nHealthcare and epidemiology analytics help in monitoring patient records, disease outbreaks, and hospital efficiency.\n\n\n#As an example, we will do patient-data anlysis, consider a dataset 'hospital_data'.\n\nhospital_data &lt;- data.frame(\n  patient_id = 1:20,  # Unique patient IDs\n  age = c(45, 67, 23, 56, 34, 78, 54, 61, 29, 50, \n          68, 40, 33, 71, 25, 80, 58, 47, 62, 38),  # Age of patients\n  gender = c(\"Male\", \"Female\", \"Male\", \"Female\", \"Male\", \"Female\", \"Male\", \n             \"Female\", \"Male\", \"Female\", \"Male\", \"Female\", \"Male\", \"Female\", \n             \"Male\", \"Female\", \"Male\", \"Female\", \"Male\", \"Female\"),  # Gender\n  disease = c(\"Diabetes\", \"Hypertension\", \"Asthma\", \"Heart Disease\", \"Diabetes\",\n              \"Hypertension\", \"Asthma\", \"Heart Disease\", \"Diabetes\", \"Hypertension\",\n              \"Asthma\", \"Heart Disease\", \"Diabetes\", \"Hypertension\", \"Asthma\", \n              \"Heart Disease\", \"Diabetes\", \"Hypertension\", \"Asthma\", \"Heart Disease\"),  # Disease category\n  hospital = c(\"General Hospital\", \"City Hospital\", \"General Hospital\", \"City Hospital\",\n               \"General Hospital\", \"City Hospital\", \"General Hospital\", \"City Hospital\",\n               \"General Hospital\", \"City Hospital\", \"General Hospital\", \"City Hospital\",\n               \"General Hospital\", \"City Hospital\", \"General Hospital\", \"City Hospital\",\n               \"General Hospital\", \"City Hospital\", \"General Hospital\", \"City Hospital\"),  # Hospital name\n  stay_length = c(5, 7, 3, 10, 4, 6, 2, 8, 5, 9, \n                  7, 4, 3, 6, 2, 11, 8, 5, 6, 3),  # Number of days admitted\n  treatment_cost = c(1500, 2500, 1200, 5000, 1800, 2700, 1100, 4500, 1600, 3000,\n                     2200, 4000, 1400, 2800, 1300, 5500, 2900, 2100, 3200, 1700)  # Cost of treatment\n)\n\n# Viewing the first few rows of the dataset\nhead(hospital_data)\n\n\nA data.frame: 6 × 7\n\n\n\npatient_id\nage\ngender\ndisease\nhospital\nstay_length\ntreatment_cost\n\n\n\n&lt;int&gt;\n&lt;dbl&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\n1\n45\nMale\nDiabetes\nGeneral Hospital\n5\n1500\n\n\n2\n2\n67\nFemale\nHypertension\nCity Hospital\n7\n2500\n\n\n3\n3\n23\nMale\nAsthma\nGeneral Hospital\n3\n1200\n\n\n4\n4\n56\nFemale\nHeart Disease\nCity Hospital\n10\n5000\n\n\n5\n5\n34\nMale\nDiabetes\nGeneral Hospital\n4\n1800\n\n\n6\n6\n78\nFemale\nHypertension\nCity Hospital\n6\n2700\n\n\n\n\n\n\n#Analysis 1: Finding average hospital stay by disease.\n# This helps in identifying diseases that require longer hospitalization.\n\nhospital_data %&gt;% \n  group_by(disease) %&gt;% \n  summarise(avg_stay = mean(stay_length))\n\n\nA tibble: 4 × 2\n\n\ndisease\navg_stay\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n\n\n\n\nAsthma\n4.0\n\n\nDiabetes\n5.0\n\n\nHeart Disease\n7.2\n\n\nHypertension\n6.6\n\n\n\n\n\n\n#Analysis 2: Total treatment cost by hospital.\n# This helps analyze which hospitals have the highest treatment expenses.\n\nhospital_data %&gt;% \n  group_by(hospital) %&gt;% \n  summarise(total_cost = sum(treatment_cost)) %&gt;% \n  arrange(desc(total_cost))\n\n\nA tibble: 2 × 2\n\n\nhospital\ntotal_cost\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n\n\n\n\nCity Hospital\n33800\n\n\nGeneral Hospital\n18200\n\n\n\n\n\n\n#Analysis 3: Gender-wise average treatment cost.\n# This can reveal trends in treatment costs between male and female patients.\n\nhospital_data %&gt;% \n  group_by(gender) %&gt;% \n  summarise(avg_cost = mean(treatment_cost))\n\n\nA tibble: 2 × 2\n\n\ngender\navg_cost\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n\n\n\n\nFemale\n3380\n\n\nMale\n1820\n\n\n\n\n\n\n#Analysis 4: Most commonly treated diseases.\n# This shows the frequency of different diseases in the dataset.\nhospital_data %&gt;% \n  count(disease) %&gt;% \n  arrange(desc(n))\n\n\nA data.frame: 4 × 2\n\n\ndisease\nn\n\n\n&lt;chr&gt;\n&lt;int&gt;\n\n\n\n\nAsthma\n5\n\n\nDiabetes\n5\n\n\nHeart Disease\n5\n\n\nHypertension\n5\n\n\n\n\n\n\nGeospatial analysis\nGeospatial analysis involves studying location-based data to identify trends, patterns, and relationships across different regions.\n\n\n#As an example, we will do air pollution anaylsis. For which, consider a dataset 'air_quality_data'\n\nair_quality_data &lt;- data.frame(\n  city = c(\"New York\", \"Los Angeles\", \"Chicago\", \"Houston\", \"Phoenix\", \n           \"Philadelphia\", \"San Antonio\", \"San Diego\", \"Dallas\", \"San Jose\"),\n  state = c(\"NY\", \"CA\", \"IL\", \"TX\", \"AZ\", \"PA\", \"TX\", \"CA\", \"TX\", \"CA\"),\n  latitude = c(40.71, 34.05, 41.87, 29.76, 33.44, 39.95, 29.42, 32.71, 32.78, 37.33),\n  longitude = c(-74.01, -118.24, -87.62, -95.37, -112.07, -75.17, -98.49, -117.16, -96.80, -121.88),\n  pm2_5 = c(12, 25, 18, 30, 22, 15, 35, 20, 28, 14),  # Fine particulate matter\n  pm10 = c(30, 50, 40, 55, 45, 35, 65, 38, 52, 33),  # Larger particulate matter\n  aqi = c(45, 110, 70, 130, 95, 55, 150, 78, 125, 48)  # Air Quality Index\n)\n\n# Viewing the first few rows of the dataset\nhead(air_quality_data)\n\n\nA data.frame: 6 × 7\n\n\n\ncity\nstate\nlatitude\nlongitude\npm2_5\npm10\naqi\n\n\n\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\nNew York\nNY\n40.71\n-74.01\n12\n30\n45\n\n\n2\nLos Angeles\nCA\n34.05\n-118.24\n25\n50\n110\n\n\n3\nChicago\nIL\n41.87\n-87.62\n18\n40\n70\n\n\n4\nHouston\nTX\n29.76\n-95.37\n30\n55\n130\n\n\n5\nPhoenix\nAZ\n33.44\n-112.07\n22\n45\n95\n\n\n6\nPhiladelphia\nPA\n39.95\n-75.17\n15\n35\n55\n\n\n\n\n\n\n#Analysis 1: Average PM2.5 and PM10 levels by state, and cities with worst air quality.\n\n# This helps in understanding air quality trends at the state level as well as \n# identifying cities with worst air quality.\n\nair_quality_data %&gt;% \n  group_by(state) %&gt;% \n  summarise(avg_pm2_5 = mean(pm2_5), avg_pm10 = mean(pm10))\n\nair_quality_data %&gt;% \n  arrange(desc(aqi)) %&gt;% \n  head(5) #Top 5\n\n\nA tibble: 6 × 3\n\n\nstate\navg_pm2_5\navg_pm10\n\n\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nAZ\n22.00000\n45.00000\n\n\nCA\n19.66667\n40.33333\n\n\nIL\n18.00000\n40.00000\n\n\nNY\n12.00000\n30.00000\n\n\nPA\n15.00000\n35.00000\n\n\nTX\n31.00000\n57.33333\n\n\n\n\n\n\nA data.frame: 5 × 7\n\n\n\ncity\nstate\nlatitude\nlongitude\npm2_5\npm10\naqi\n\n\n\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n1\nSan Antonio\nTX\n29.42\n-98.49\n35\n65\n150\n\n\n2\nHouston\nTX\n29.76\n-95.37\n30\n55\n130\n\n\n3\nDallas\nTX\n32.78\n-96.80\n28\n52\n125\n\n\n4\nLos Angeles\nCA\n34.05\n-118.24\n25\n50\n110\n\n\n5\nPhoenix\nAZ\n33.44\n-112.07\n22\n45\n95\n\n\n\n\n\n\n#Analysis 2: Correlation between PM2.5 and AQI.\n# This checks how strongly PM2.5 is related to overall air quality.\n\nair_quality_data %&gt;% \n  summarise(correlation = cor(pm2_5, aqi))\n\n\nA data.frame: 1 × 1\n\n\ncorrelation\n\n\n&lt;dbl&gt;\n\n\n\n\n0.9953044\n\n\n\n\n\n\n#Analysis 3: State-wise worst polluted city.\n\nair_quality_data %&gt;% \n  group_by(state) %&gt;% \n  filter(aqi == max(aqi))\n\n\nA grouped_df: 6 × 7\n\n\ncity\nstate\nlatitude\nlongitude\npm2_5\npm10\naqi\n\n\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nNew York\nNY\n40.71\n-74.01\n12\n30\n45\n\n\nLos Angeles\nCA\n34.05\n-118.24\n25\n50\n110\n\n\nChicago\nIL\n41.87\n-87.62\n18\n40\n70\n\n\nPhoenix\nAZ\n33.44\n-112.07\n22\n45\n95\n\n\nPhiladelphia\nPA\n39.95\n-75.17\n15\n35\n55\n\n\nSan Antonio\nTX\n29.42\n-98.49\n35\n65\n150\n\n\n\n\n\n\n#Analysis 4: Identifying cities with PM2.5 levels above the safe limit.\n# This filters out cities where PM2.5 levels exceed 25 µg/m³, which is unhealthy.\n\nair_quality_data %&gt;% \n  filter(pm2_5 &gt; 25)\n\n\nA data.frame: 3 × 7\n\n\ncity\nstate\nlatitude\nlongitude\npm2_5\npm10\naqi\n\n\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nHouston\nTX\n29.76\n-95.37\n30\n55\n130\n\n\nSan Antonio\nTX\n29.42\n-98.49\n35\n65\n150\n\n\nDallas\nTX\n32.78\n-96.80\n28\n52\n125"
  },
  {
    "objectID": "posts/J018_R_Coding.html",
    "href": "posts/J018_R_Coding.html",
    "title": "Mastering Data Manipulation in R with dplyr",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nData Set\n\nmtcars\n\n\nA data.frame: 32 × 11\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nMazda RX4\n21.0\n6\n160.0\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160.0\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\nDatsun 710\n22.8\n4\n108.0\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n\n\nHornet 4 Drive\n21.4\n6\n258.0\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\nHornet Sportabout\n18.7\n8\n360.0\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\n\n\nValiant\n18.1\n6\n225.0\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\n\n\nDuster 360\n14.3\n8\n360.0\n245\n3.21\n3.570\n15.84\n0\n0\n3\n4\n\n\nMerc 240D\n24.4\n4\n146.7\n62\n3.69\n3.190\n20.00\n1\n0\n4\n2\n\n\nMerc 230\n22.8\n4\n140.8\n95\n3.92\n3.150\n22.90\n1\n0\n4\n2\n\n\nMerc 280\n19.2\n6\n167.6\n123\n3.92\n3.440\n18.30\n1\n0\n4\n4\n\n\nMerc 280C\n17.8\n6\n167.6\n123\n3.92\n3.440\n18.90\n1\n0\n4\n4\n\n\nMerc 450SE\n16.4\n8\n275.8\n180\n3.07\n4.070\n17.40\n0\n0\n3\n3\n\n\nMerc 450SL\n17.3\n8\n275.8\n180\n3.07\n3.730\n17.60\n0\n0\n3\n3\n\n\nMerc 450SLC\n15.2\n8\n275.8\n180\n3.07\n3.780\n18.00\n0\n0\n3\n3\n\n\nCadillac Fleetwood\n10.4\n8\n472.0\n205\n2.93\n5.250\n17.98\n0\n0\n3\n4\n\n\nLincoln Continental\n10.4\n8\n460.0\n215\n3.00\n5.424\n17.82\n0\n0\n3\n4\n\n\nChrysler Imperial\n14.7\n8\n440.0\n230\n3.23\n5.345\n17.42\n0\n0\n3\n4\n\n\nFiat 128\n32.4\n4\n78.7\n66\n4.08\n2.200\n19.47\n1\n1\n4\n1\n\n\nHonda Civic\n30.4\n4\n75.7\n52\n4.93\n1.615\n18.52\n1\n1\n4\n2\n\n\nToyota Corolla\n33.9\n4\n71.1\n65\n4.22\n1.835\n19.90\n1\n1\n4\n1\n\n\nToyota Corona\n21.5\n4\n120.1\n97\n3.70\n2.465\n20.01\n1\n0\n3\n1\n\n\nDodge Challenger\n15.5\n8\n318.0\n150\n2.76\n3.520\n16.87\n0\n0\n3\n2\n\n\nAMC Javelin\n15.2\n8\n304.0\n150\n3.15\n3.435\n17.30\n0\n0\n3\n2\n\n\nCamaro Z28\n13.3\n8\n350.0\n245\n3.73\n3.840\n15.41\n0\n0\n3\n4\n\n\nPontiac Firebird\n19.2\n8\n400.0\n175\n3.08\n3.845\n17.05\n0\n0\n3\n2\n\n\nFiat X1-9\n27.3\n4\n79.0\n66\n4.08\n1.935\n18.90\n1\n1\n4\n1\n\n\nPorsche 914-2\n26.0\n4\n120.3\n91\n4.43\n2.140\n16.70\n0\n1\n5\n2\n\n\nLotus Europa\n30.4\n4\n95.1\n113\n3.77\n1.513\n16.90\n1\n1\n5\n2\n\n\nFord Pantera L\n15.8\n8\n351.0\n264\n4.22\n3.170\n14.50\n0\n1\n5\n4\n\n\nFerrari Dino\n19.7\n6\n145.0\n175\n3.62\n2.770\n15.50\n0\n1\n5\n6\n\n\nMaserati Bora\n15.0\n8\n301.0\n335\n3.54\n3.570\n14.60\n0\n1\n5\n8\n\n\nVolvo 142E\n21.4\n4\n121.0\n109\n4.11\n2.780\n18.60\n1\n1\n4\n2\n\n\n\n\n\n\n\nBasic Tools\n\nfilter()\n\n# Filter rows where mpg is greater than 20\nmtcars %&gt;% filter(mpg &gt; 20)\n\n\nA data.frame: 14 × 11\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nMazda RX4\n21.0\n6\n160.0\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160.0\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\nDatsun 710\n22.8\n4\n108.0\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n\n\nHornet 4 Drive\n21.4\n6\n258.0\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\nMerc 240D\n24.4\n4\n146.7\n62\n3.69\n3.190\n20.00\n1\n0\n4\n2\n\n\nMerc 230\n22.8\n4\n140.8\n95\n3.92\n3.150\n22.90\n1\n0\n4\n2\n\n\nFiat 128\n32.4\n4\n78.7\n66\n4.08\n2.200\n19.47\n1\n1\n4\n1\n\n\nHonda Civic\n30.4\n4\n75.7\n52\n4.93\n1.615\n18.52\n1\n1\n4\n2\n\n\nToyota Corolla\n33.9\n4\n71.1\n65\n4.22\n1.835\n19.90\n1\n1\n4\n1\n\n\nToyota Corona\n21.5\n4\n120.1\n97\n3.70\n2.465\n20.01\n1\n0\n3\n1\n\n\nFiat X1-9\n27.3\n4\n79.0\n66\n4.08\n1.935\n18.90\n1\n1\n4\n1\n\n\nPorsche 914-2\n26.0\n4\n120.3\n91\n4.43\n2.140\n16.70\n0\n1\n5\n2\n\n\nLotus Europa\n30.4\n4\n95.1\n113\n3.77\n1.513\n16.90\n1\n1\n5\n2\n\n\nVolvo 142E\n21.4\n4\n121.0\n109\n4.11\n2.780\n18.60\n1\n1\n4\n2\n\n\n\n\n\n\n# Multiple conditions\nmtcars %&gt;% filter(mpg &gt; 20, cyl == 6)\n\n\nA data.frame: 3 × 11\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nMazda RX4\n21.0\n6\n160\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\n\n\n\n\n# Using %in% operator\nmtcars %&gt;% filter(cyl %in% c(4, 6)) #Basically selects cars that have only 4 or 6 cylinders in their engine\n\n\nA data.frame: 18 × 11\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nMazda RX4\n21.0\n6\n160.0\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160.0\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\nDatsun 710\n22.8\n4\n108.0\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n\n\nHornet 4 Drive\n21.4\n6\n258.0\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\nValiant\n18.1\n6\n225.0\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\n\n\nMerc 240D\n24.4\n4\n146.7\n62\n3.69\n3.190\n20.00\n1\n0\n4\n2\n\n\nMerc 230\n22.8\n4\n140.8\n95\n3.92\n3.150\n22.90\n1\n0\n4\n2\n\n\nMerc 280\n19.2\n6\n167.6\n123\n3.92\n3.440\n18.30\n1\n0\n4\n4\n\n\nMerc 280C\n17.8\n6\n167.6\n123\n3.92\n3.440\n18.90\n1\n0\n4\n4\n\n\nFiat 128\n32.4\n4\n78.7\n66\n4.08\n2.200\n19.47\n1\n1\n4\n1\n\n\nHonda Civic\n30.4\n4\n75.7\n52\n4.93\n1.615\n18.52\n1\n1\n4\n2\n\n\nToyota Corolla\n33.9\n4\n71.1\n65\n4.22\n1.835\n19.90\n1\n1\n4\n1\n\n\nToyota Corona\n21.5\n4\n120.1\n97\n3.70\n2.465\n20.01\n1\n0\n3\n1\n\n\nFiat X1-9\n27.3\n4\n79.0\n66\n4.08\n1.935\n18.90\n1\n1\n4\n1\n\n\nPorsche 914-2\n26.0\n4\n120.3\n91\n4.43\n2.140\n16.70\n0\n1\n5\n2\n\n\nLotus Europa\n30.4\n4\n95.1\n113\n3.77\n1.513\n16.90\n1\n1\n5\n2\n\n\nFerrari Dino\n19.7\n6\n145.0\n175\n3.62\n2.770\n15.50\n0\n1\n5\n6\n\n\nVolvo 142E\n21.4\n4\n121.0\n109\n4.11\n2.780\n18.60\n1\n1\n4\n2\n\n\n\n\n\n###select()\n\n# Select specific columns\nmtcars %&gt;% select(mpg, cyl, hp)\n\n\nA data.frame: 32 × 3\n\n\n\nmpg\ncyl\nhp\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nMazda RX4\n21.0\n6\n110\n\n\nMazda RX4 Wag\n21.0\n6\n110\n\n\nDatsun 710\n22.8\n4\n93\n\n\nHornet 4 Drive\n21.4\n6\n110\n\n\nHornet Sportabout\n18.7\n8\n175\n\n\nValiant\n18.1\n6\n105\n\n\nDuster 360\n14.3\n8\n245\n\n\nMerc 240D\n24.4\n4\n62\n\n\nMerc 230\n22.8\n4\n95\n\n\nMerc 280\n19.2\n6\n123\n\n\nMerc 280C\n17.8\n6\n123\n\n\nMerc 450SE\n16.4\n8\n180\n\n\nMerc 450SL\n17.3\n8\n180\n\n\nMerc 450SLC\n15.2\n8\n180\n\n\nCadillac Fleetwood\n10.4\n8\n205\n\n\nLincoln Continental\n10.4\n8\n215\n\n\nChrysler Imperial\n14.7\n8\n230\n\n\nFiat 128\n32.4\n4\n66\n\n\nHonda Civic\n30.4\n4\n52\n\n\nToyota Corolla\n33.9\n4\n65\n\n\nToyota Corona\n21.5\n4\n97\n\n\nDodge Challenger\n15.5\n8\n150\n\n\nAMC Javelin\n15.2\n8\n150\n\n\nCamaro Z28\n13.3\n8\n245\n\n\nPontiac Firebird\n19.2\n8\n175\n\n\nFiat X1-9\n27.3\n4\n66\n\n\nPorsche 914-2\n26.0\n4\n91\n\n\nLotus Europa\n30.4\n4\n113\n\n\nFord Pantera L\n15.8\n8\n264\n\n\nFerrari Dino\n19.7\n6\n175\n\n\nMaserati Bora\n15.0\n8\n335\n\n\nVolvo 142E\n21.4\n4\n109\n\n\n\n\n\n\n# Select columns by range\nmtcars %&gt;% select(mpg:hp)\n\n\nA data.frame: 32 × 4\n\n\n\nmpg\ncyl\ndisp\nhp\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nMazda RX4\n21.0\n6\n160.0\n110\n\n\nMazda RX4 Wag\n21.0\n6\n160.0\n110\n\n\nDatsun 710\n22.8\n4\n108.0\n93\n\n\nHornet 4 Drive\n21.4\n6\n258.0\n110\n\n\nHornet Sportabout\n18.7\n8\n360.0\n175\n\n\nValiant\n18.1\n6\n225.0\n105\n\n\nDuster 360\n14.3\n8\n360.0\n245\n\n\nMerc 240D\n24.4\n4\n146.7\n62\n\n\nMerc 230\n22.8\n4\n140.8\n95\n\n\nMerc 280\n19.2\n6\n167.6\n123\n\n\nMerc 280C\n17.8\n6\n167.6\n123\n\n\nMerc 450SE\n16.4\n8\n275.8\n180\n\n\nMerc 450SL\n17.3\n8\n275.8\n180\n\n\nMerc 450SLC\n15.2\n8\n275.8\n180\n\n\nCadillac Fleetwood\n10.4\n8\n472.0\n205\n\n\nLincoln Continental\n10.4\n8\n460.0\n215\n\n\nChrysler Imperial\n14.7\n8\n440.0\n230\n\n\nFiat 128\n32.4\n4\n78.7\n66\n\n\nHonda Civic\n30.4\n4\n75.7\n52\n\n\nToyota Corolla\n33.9\n4\n71.1\n65\n\n\nToyota Corona\n21.5\n4\n120.1\n97\n\n\nDodge Challenger\n15.5\n8\n318.0\n150\n\n\nAMC Javelin\n15.2\n8\n304.0\n150\n\n\nCamaro Z28\n13.3\n8\n350.0\n245\n\n\nPontiac Firebird\n19.2\n8\n400.0\n175\n\n\nFiat X1-9\n27.3\n4\n79.0\n66\n\n\nPorsche 914-2\n26.0\n4\n120.3\n91\n\n\nLotus Europa\n30.4\n4\n95.1\n113\n\n\nFord Pantera L\n15.8\n8\n351.0\n264\n\n\nFerrari Dino\n19.7\n6\n145.0\n175\n\n\nMaserati Bora\n15.0\n8\n301.0\n335\n\n\nVolvo 142E\n21.4\n4\n121.0\n109\n\n\n\n\n\n\n# Exclude columns\nmtcars %&gt;% select(-cyl, -hp)\n\n\nA data.frame: 32 × 9\n\n\n\nmpg\ndisp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nMazda RX4\n21.0\n160.0\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\nMazda RX4 Wag\n21.0\n160.0\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\nDatsun 710\n22.8\n108.0\n3.85\n2.320\n18.61\n1\n1\n4\n1\n\n\nHornet 4 Drive\n21.4\n258.0\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\nHornet Sportabout\n18.7\n360.0\n3.15\n3.440\n17.02\n0\n0\n3\n2\n\n\nValiant\n18.1\n225.0\n2.76\n3.460\n20.22\n1\n0\n3\n1\n\n\nDuster 360\n14.3\n360.0\n3.21\n3.570\n15.84\n0\n0\n3\n4\n\n\nMerc 240D\n24.4\n146.7\n3.69\n3.190\n20.00\n1\n0\n4\n2\n\n\nMerc 230\n22.8\n140.8\n3.92\n3.150\n22.90\n1\n0\n4\n2\n\n\nMerc 280\n19.2\n167.6\n3.92\n3.440\n18.30\n1\n0\n4\n4\n\n\nMerc 280C\n17.8\n167.6\n3.92\n3.440\n18.90\n1\n0\n4\n4\n\n\nMerc 450SE\n16.4\n275.8\n3.07\n4.070\n17.40\n0\n0\n3\n3\n\n\nMerc 450SL\n17.3\n275.8\n3.07\n3.730\n17.60\n0\n0\n3\n3\n\n\nMerc 450SLC\n15.2\n275.8\n3.07\n3.780\n18.00\n0\n0\n3\n3\n\n\nCadillac Fleetwood\n10.4\n472.0\n2.93\n5.250\n17.98\n0\n0\n3\n4\n\n\nLincoln Continental\n10.4\n460.0\n3.00\n5.424\n17.82\n0\n0\n3\n4\n\n\nChrysler Imperial\n14.7\n440.0\n3.23\n5.345\n17.42\n0\n0\n3\n4\n\n\nFiat 128\n32.4\n78.7\n4.08\n2.200\n19.47\n1\n1\n4\n1\n\n\nHonda Civic\n30.4\n75.7\n4.93\n1.615\n18.52\n1\n1\n4\n2\n\n\nToyota Corolla\n33.9\n71.1\n4.22\n1.835\n19.90\n1\n1\n4\n1\n\n\nToyota Corona\n21.5\n120.1\n3.70\n2.465\n20.01\n1\n0\n3\n1\n\n\nDodge Challenger\n15.5\n318.0\n2.76\n3.520\n16.87\n0\n0\n3\n2\n\n\nAMC Javelin\n15.2\n304.0\n3.15\n3.435\n17.30\n0\n0\n3\n2\n\n\nCamaro Z28\n13.3\n350.0\n3.73\n3.840\n15.41\n0\n0\n3\n4\n\n\nPontiac Firebird\n19.2\n400.0\n3.08\n3.845\n17.05\n0\n0\n3\n2\n\n\nFiat X1-9\n27.3\n79.0\n4.08\n1.935\n18.90\n1\n1\n4\n1\n\n\nPorsche 914-2\n26.0\n120.3\n4.43\n2.140\n16.70\n0\n1\n5\n2\n\n\nLotus Europa\n30.4\n95.1\n3.77\n1.513\n16.90\n1\n1\n5\n2\n\n\nFord Pantera L\n15.8\n351.0\n4.22\n3.170\n14.50\n0\n1\n5\n4\n\n\nFerrari Dino\n19.7\n145.0\n3.62\n2.770\n15.50\n0\n1\n5\n6\n\n\nMaserati Bora\n15.0\n301.0\n3.54\n3.570\n14.60\n0\n1\n5\n8\n\n\nVolvo 142E\n21.4\n121.0\n4.11\n2.780\n18.60\n1\n1\n4\n2\n\n\n\n\n\n\n# Select columns starting with 'd'\nmtcars %&gt;% select(starts_with(\"d\"))\n\n\nA data.frame: 32 × 2\n\n\n\ndisp\ndrat\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nMazda RX4\n160.0\n3.90\n\n\nMazda RX4 Wag\n160.0\n3.90\n\n\nDatsun 710\n108.0\n3.85\n\n\nHornet 4 Drive\n258.0\n3.08\n\n\nHornet Sportabout\n360.0\n3.15\n\n\nValiant\n225.0\n2.76\n\n\nDuster 360\n360.0\n3.21\n\n\nMerc 240D\n146.7\n3.69\n\n\nMerc 230\n140.8\n3.92\n\n\nMerc 280\n167.6\n3.92\n\n\nMerc 280C\n167.6\n3.92\n\n\nMerc 450SE\n275.8\n3.07\n\n\nMerc 450SL\n275.8\n3.07\n\n\nMerc 450SLC\n275.8\n3.07\n\n\nCadillac Fleetwood\n472.0\n2.93\n\n\nLincoln Continental\n460.0\n3.00\n\n\nChrysler Imperial\n440.0\n3.23\n\n\nFiat 128\n78.7\n4.08\n\n\nHonda Civic\n75.7\n4.93\n\n\nToyota Corolla\n71.1\n4.22\n\n\nToyota Corona\n120.1\n3.70\n\n\nDodge Challenger\n318.0\n2.76\n\n\nAMC Javelin\n304.0\n3.15\n\n\nCamaro Z28\n350.0\n3.73\n\n\nPontiac Firebird\n400.0\n3.08\n\n\nFiat X1-9\n79.0\n4.08\n\n\nPorsche 914-2\n120.3\n4.43\n\n\nLotus Europa\n95.1\n3.77\n\n\nFord Pantera L\n351.0\n4.22\n\n\nFerrari Dino\n145.0\n3.62\n\n\nMaserati Bora\n301.0\n3.54\n\n\nVolvo 142E\n121.0\n4.11\n\n\n\n\n\n\n\nmutate()\n\n# Create a new column\nmtcars %&gt;% mutate(kpl = mpg * 0.425)\n\n\nA data.frame: 32 × 12\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\nkpl\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nMazda RX4\n21.0\n6\n160.0\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n8.9250\n\n\nMazda RX4 Wag\n21.0\n6\n160.0\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n8.9250\n\n\nDatsun 710\n22.8\n4\n108.0\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n9.6900\n\n\nHornet 4 Drive\n21.4\n6\n258.0\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n9.0950\n\n\nHornet Sportabout\n18.7\n8\n360.0\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\n7.9475\n\n\nValiant\n18.1\n6\n225.0\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\n7.6925\n\n\nDuster 360\n14.3\n8\n360.0\n245\n3.21\n3.570\n15.84\n0\n0\n3\n4\n6.0775\n\n\nMerc 240D\n24.4\n4\n146.7\n62\n3.69\n3.190\n20.00\n1\n0\n4\n2\n10.3700\n\n\nMerc 230\n22.8\n4\n140.8\n95\n3.92\n3.150\n22.90\n1\n0\n4\n2\n9.6900\n\n\nMerc 280\n19.2\n6\n167.6\n123\n3.92\n3.440\n18.30\n1\n0\n4\n4\n8.1600\n\n\nMerc 280C\n17.8\n6\n167.6\n123\n3.92\n3.440\n18.90\n1\n0\n4\n4\n7.5650\n\n\nMerc 450SE\n16.4\n8\n275.8\n180\n3.07\n4.070\n17.40\n0\n0\n3\n3\n6.9700\n\n\nMerc 450SL\n17.3\n8\n275.8\n180\n3.07\n3.730\n17.60\n0\n0\n3\n3\n7.3525\n\n\nMerc 450SLC\n15.2\n8\n275.8\n180\n3.07\n3.780\n18.00\n0\n0\n3\n3\n6.4600\n\n\nCadillac Fleetwood\n10.4\n8\n472.0\n205\n2.93\n5.250\n17.98\n0\n0\n3\n4\n4.4200\n\n\nLincoln Continental\n10.4\n8\n460.0\n215\n3.00\n5.424\n17.82\n0\n0\n3\n4\n4.4200\n\n\nChrysler Imperial\n14.7\n8\n440.0\n230\n3.23\n5.345\n17.42\n0\n0\n3\n4\n6.2475\n\n\nFiat 128\n32.4\n4\n78.7\n66\n4.08\n2.200\n19.47\n1\n1\n4\n1\n13.7700\n\n\nHonda Civic\n30.4\n4\n75.7\n52\n4.93\n1.615\n18.52\n1\n1\n4\n2\n12.9200\n\n\nToyota Corolla\n33.9\n4\n71.1\n65\n4.22\n1.835\n19.90\n1\n1\n4\n1\n14.4075\n\n\nToyota Corona\n21.5\n4\n120.1\n97\n3.70\n2.465\n20.01\n1\n0\n3\n1\n9.1375\n\n\nDodge Challenger\n15.5\n8\n318.0\n150\n2.76\n3.520\n16.87\n0\n0\n3\n2\n6.5875\n\n\nAMC Javelin\n15.2\n8\n304.0\n150\n3.15\n3.435\n17.30\n0\n0\n3\n2\n6.4600\n\n\nCamaro Z28\n13.3\n8\n350.0\n245\n3.73\n3.840\n15.41\n0\n0\n3\n4\n5.6525\n\n\nPontiac Firebird\n19.2\n8\n400.0\n175\n3.08\n3.845\n17.05\n0\n0\n3\n2\n8.1600\n\n\nFiat X1-9\n27.3\n4\n79.0\n66\n4.08\n1.935\n18.90\n1\n1\n4\n1\n11.6025\n\n\nPorsche 914-2\n26.0\n4\n120.3\n91\n4.43\n2.140\n16.70\n0\n1\n5\n2\n11.0500\n\n\nLotus Europa\n30.4\n4\n95.1\n113\n3.77\n1.513\n16.90\n1\n1\n5\n2\n12.9200\n\n\nFord Pantera L\n15.8\n8\n351.0\n264\n4.22\n3.170\n14.50\n0\n1\n5\n4\n6.7150\n\n\nFerrari Dino\n19.7\n6\n145.0\n175\n3.62\n2.770\n15.50\n0\n1\n5\n6\n8.3725\n\n\nMaserati Bora\n15.0\n8\n301.0\n335\n3.54\n3.570\n14.60\n0\n1\n5\n8\n6.3750\n\n\nVolvo 142E\n21.4\n4\n121.0\n109\n4.11\n2.780\n18.60\n1\n1\n4\n2\n9.0950\n\n\n\n\n\n\n# Modify existing column\nmtcars %&gt;% mutate(mpg = mpg * 2)\n\n\nA data.frame: 32 × 11\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nMazda RX4\n42.0\n6\n160.0\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\nMazda RX4 Wag\n42.0\n6\n160.0\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\nDatsun 710\n45.6\n4\n108.0\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n\n\nHornet 4 Drive\n42.8\n6\n258.0\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\nHornet Sportabout\n37.4\n8\n360.0\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\n\n\nValiant\n36.2\n6\n225.0\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\n\n\nDuster 360\n28.6\n8\n360.0\n245\n3.21\n3.570\n15.84\n0\n0\n3\n4\n\n\nMerc 240D\n48.8\n4\n146.7\n62\n3.69\n3.190\n20.00\n1\n0\n4\n2\n\n\nMerc 230\n45.6\n4\n140.8\n95\n3.92\n3.150\n22.90\n1\n0\n4\n2\n\n\nMerc 280\n38.4\n6\n167.6\n123\n3.92\n3.440\n18.30\n1\n0\n4\n4\n\n\nMerc 280C\n35.6\n6\n167.6\n123\n3.92\n3.440\n18.90\n1\n0\n4\n4\n\n\nMerc 450SE\n32.8\n8\n275.8\n180\n3.07\n4.070\n17.40\n0\n0\n3\n3\n\n\nMerc 450SL\n34.6\n8\n275.8\n180\n3.07\n3.730\n17.60\n0\n0\n3\n3\n\n\nMerc 450SLC\n30.4\n8\n275.8\n180\n3.07\n3.780\n18.00\n0\n0\n3\n3\n\n\nCadillac Fleetwood\n20.8\n8\n472.0\n205\n2.93\n5.250\n17.98\n0\n0\n3\n4\n\n\nLincoln Continental\n20.8\n8\n460.0\n215\n3.00\n5.424\n17.82\n0\n0\n3\n4\n\n\nChrysler Imperial\n29.4\n8\n440.0\n230\n3.23\n5.345\n17.42\n0\n0\n3\n4\n\n\nFiat 128\n64.8\n4\n78.7\n66\n4.08\n2.200\n19.47\n1\n1\n4\n1\n\n\nHonda Civic\n60.8\n4\n75.7\n52\n4.93\n1.615\n18.52\n1\n1\n4\n2\n\n\nToyota Corolla\n67.8\n4\n71.1\n65\n4.22\n1.835\n19.90\n1\n1\n4\n1\n\n\nToyota Corona\n43.0\n4\n120.1\n97\n3.70\n2.465\n20.01\n1\n0\n3\n1\n\n\nDodge Challenger\n31.0\n8\n318.0\n150\n2.76\n3.520\n16.87\n0\n0\n3\n2\n\n\nAMC Javelin\n30.4\n8\n304.0\n150\n3.15\n3.435\n17.30\n0\n0\n3\n2\n\n\nCamaro Z28\n26.6\n8\n350.0\n245\n3.73\n3.840\n15.41\n0\n0\n3\n4\n\n\nPontiac Firebird\n38.4\n8\n400.0\n175\n3.08\n3.845\n17.05\n0\n0\n3\n2\n\n\nFiat X1-9\n54.6\n4\n79.0\n66\n4.08\n1.935\n18.90\n1\n1\n4\n1\n\n\nPorsche 914-2\n52.0\n4\n120.3\n91\n4.43\n2.140\n16.70\n0\n1\n5\n2\n\n\nLotus Europa\n60.8\n4\n95.1\n113\n3.77\n1.513\n16.90\n1\n1\n5\n2\n\n\nFord Pantera L\n31.6\n8\n351.0\n264\n4.22\n3.170\n14.50\n0\n1\n5\n4\n\n\nFerrari Dino\n39.4\n6\n145.0\n175\n3.62\n2.770\n15.50\n0\n1\n5\n6\n\n\nMaserati Bora\n30.0\n8\n301.0\n335\n3.54\n3.570\n14.60\n0\n1\n5\n8\n\n\nVolvo 142E\n42.8\n4\n121.0\n109\n4.11\n2.780\n18.60\n1\n1\n4\n2\n\n\n\n\n\n\n# Create multiple columns\nmtcars %&gt;% mutate(\n  kpl = mpg * 0.425,\n  hp_per_ton = hp / (wt * 0.45359237)\n)\n\n\nA data.frame: 32 × 13\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\nkpl\nhp_per_ton\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nMazda RX4\n21.0\n6\n160.0\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n8.9250\n92.56049\n\n\nMazda RX4 Wag\n21.0\n6\n160.0\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n8.9250\n84.35078\n\n\nDatsun 710\n22.8\n4\n108.0\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n9.6900\n88.37496\n\n\nHornet 4 Drive\n21.4\n6\n258.0\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n9.0950\n75.43032\n\n\nHornet Sportabout\n18.7\n8\n360.0\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\n7.9475\n112.15377\n\n\nValiant\n18.1\n6\n225.0\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\n7.6925\n66.90329\n\n\nDuster 360\n14.3\n8\n360.0\n245\n3.21\n3.570\n15.84\n0\n0\n3\n4\n6.0775\n151.29763\n\n\nMerc 240D\n24.4\n4\n146.7\n62\n3.69\n3.190\n20.00\n1\n0\n4\n2\n10.3700\n42.84846\n\n\nMerc 230\n22.8\n4\n140.8\n95\n3.92\n3.150\n22.90\n1\n0\n4\n2\n9.6900\n66.48862\n\n\nMerc 280\n19.2\n6\n167.6\n123\n3.92\n3.440\n18.30\n1\n0\n4\n4\n8.1600\n78.82808\n\n\nMerc 280C\n17.8\n6\n167.6\n123\n3.92\n3.440\n18.90\n1\n0\n4\n4\n7.5650\n78.82808\n\n\nMerc 450SE\n16.4\n8\n275.8\n180\n3.07\n4.070\n17.40\n0\n0\n3\n3\n6.9700\n97.50174\n\n\nMerc 450SL\n17.3\n8\n275.8\n180\n3.07\n3.730\n17.60\n0\n0\n3\n3\n7.3525\n106.38930\n\n\nMerc 450SLC\n15.2\n8\n275.8\n180\n3.07\n3.780\n18.00\n0\n0\n3\n3\n6.4600\n104.98203\n\n\nCadillac Fleetwood\n10.4\n8\n472.0\n205\n2.93\n5.250\n17.98\n0\n0\n3\n4\n4.4200\n86.08526\n\n\nLincoln Continental\n10.4\n8\n460.0\n215\n3.00\n5.424\n17.82\n0\n0\n3\n4\n4.4200\n87.38825\n\n\nChrysler Imperial\n14.7\n8\n440.0\n230\n3.23\n5.345\n17.42\n0\n0\n3\n4\n6.2475\n94.86683\n\n\nFiat 128\n32.4\n4\n78.7\n66\n4.08\n2.200\n19.47\n1\n1\n4\n1\n13.7700\n66.13868\n\n\nHonda Civic\n30.4\n4\n75.7\n52\n4.93\n1.615\n18.52\n1\n1\n4\n2\n12.9200\n70.98475\n\n\nToyota Corolla\n33.9\n4\n71.1\n65\n4.22\n1.835\n19.90\n1\n1\n4\n1\n14.4075\n78.09290\n\n\nToyota Corona\n21.5\n4\n120.1\n97\n3.70\n2.465\n20.01\n1\n0\n3\n1\n9.1375\n86.75391\n\n\nDodge Challenger\n15.5\n8\n318.0\n150\n2.76\n3.520\n16.87\n0\n0\n3\n2\n6.5875\n93.94699\n\n\nAMC Javelin\n15.2\n8\n304.0\n150\n3.15\n3.435\n17.30\n0\n0\n3\n2\n6.4600\n96.27173\n\n\nCamaro Z28\n13.3\n8\n350.0\n245\n3.73\n3.840\n15.41\n0\n0\n3\n4\n5.6525\n140.65952\n\n\nPontiac Firebird\n19.2\n8\n400.0\n175\n3.08\n3.845\n17.05\n0\n0\n3\n2\n8.1600\n100.34043\n\n\nFiat X1-9\n27.3\n4\n79.0\n66\n4.08\n1.935\n18.90\n1\n1\n4\n1\n11.6025\n75.19643\n\n\nPorsche 914-2\n26.0\n4\n120.3\n91\n4.43\n2.140\n16.70\n0\n1\n5\n2\n11.0500\n93.74797\n\n\nLotus Europa\n30.4\n4\n95.1\n113\n3.77\n1.513\n16.90\n1\n1\n5\n2\n12.9200\n164.65456\n\n\nFord Pantera L\n15.8\n8\n351.0\n264\n4.22\n3.170\n14.50\n0\n1\n5\n4\n6.7150\n183.60264\n\n\nFerrari Dino\n19.7\n6\n145.0\n175\n3.62\n2.770\n15.50\n0\n1\n5\n6\n8.3725\n139.28121\n\n\nMaserati Bora\n15.0\n8\n301.0\n335\n3.54\n3.570\n14.60\n0\n1\n5\n8\n6.3750\n206.87635\n\n\nVolvo 142E\n21.4\n4\n121.0\n109\n4.11\n2.780\n18.60\n1\n1\n4\n2\n9.0950\n86.44024\n\n\n\n\n\n\n\narrange()\n\n# Sort by mpg in ascending order\nmtcars %&gt;% arrange(mpg)\n\n\nA data.frame: 32 × 11\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nCadillac Fleetwood\n10.4\n8\n472.0\n205\n2.93\n5.250\n17.98\n0\n0\n3\n4\n\n\nLincoln Continental\n10.4\n8\n460.0\n215\n3.00\n5.424\n17.82\n0\n0\n3\n4\n\n\nCamaro Z28\n13.3\n8\n350.0\n245\n3.73\n3.840\n15.41\n0\n0\n3\n4\n\n\nDuster 360\n14.3\n8\n360.0\n245\n3.21\n3.570\n15.84\n0\n0\n3\n4\n\n\nChrysler Imperial\n14.7\n8\n440.0\n230\n3.23\n5.345\n17.42\n0\n0\n3\n4\n\n\nMaserati Bora\n15.0\n8\n301.0\n335\n3.54\n3.570\n14.60\n0\n1\n5\n8\n\n\nMerc 450SLC\n15.2\n8\n275.8\n180\n3.07\n3.780\n18.00\n0\n0\n3\n3\n\n\nAMC Javelin\n15.2\n8\n304.0\n150\n3.15\n3.435\n17.30\n0\n0\n3\n2\n\n\nDodge Challenger\n15.5\n8\n318.0\n150\n2.76\n3.520\n16.87\n0\n0\n3\n2\n\n\nFord Pantera L\n15.8\n8\n351.0\n264\n4.22\n3.170\n14.50\n0\n1\n5\n4\n\n\nMerc 450SE\n16.4\n8\n275.8\n180\n3.07\n4.070\n17.40\n0\n0\n3\n3\n\n\nMerc 450SL\n17.3\n8\n275.8\n180\n3.07\n3.730\n17.60\n0\n0\n3\n3\n\n\nMerc 280C\n17.8\n6\n167.6\n123\n3.92\n3.440\n18.90\n1\n0\n4\n4\n\n\nValiant\n18.1\n6\n225.0\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\n\n\nHornet Sportabout\n18.7\n8\n360.0\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\n\n\nMerc 280\n19.2\n6\n167.6\n123\n3.92\n3.440\n18.30\n1\n0\n4\n4\n\n\nPontiac Firebird\n19.2\n8\n400.0\n175\n3.08\n3.845\n17.05\n0\n0\n3\n2\n\n\nFerrari Dino\n19.7\n6\n145.0\n175\n3.62\n2.770\n15.50\n0\n1\n5\n6\n\n\nMazda RX4\n21.0\n6\n160.0\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160.0\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\nHornet 4 Drive\n21.4\n6\n258.0\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\nVolvo 142E\n21.4\n4\n121.0\n109\n4.11\n2.780\n18.60\n1\n1\n4\n2\n\n\nToyota Corona\n21.5\n4\n120.1\n97\n3.70\n2.465\n20.01\n1\n0\n3\n1\n\n\nDatsun 710\n22.8\n4\n108.0\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n\n\nMerc 230\n22.8\n4\n140.8\n95\n3.92\n3.150\n22.90\n1\n0\n4\n2\n\n\nMerc 240D\n24.4\n4\n146.7\n62\n3.69\n3.190\n20.00\n1\n0\n4\n2\n\n\nPorsche 914-2\n26.0\n4\n120.3\n91\n4.43\n2.140\n16.70\n0\n1\n5\n2\n\n\nFiat X1-9\n27.3\n4\n79.0\n66\n4.08\n1.935\n18.90\n1\n1\n4\n1\n\n\nHonda Civic\n30.4\n4\n75.7\n52\n4.93\n1.615\n18.52\n1\n1\n4\n2\n\n\nLotus Europa\n30.4\n4\n95.1\n113\n3.77\n1.513\n16.90\n1\n1\n5\n2\n\n\nFiat 128\n32.4\n4\n78.7\n66\n4.08\n2.200\n19.47\n1\n1\n4\n1\n\n\nToyota Corolla\n33.9\n4\n71.1\n65\n4.22\n1.835\n19.90\n1\n1\n4\n1\n\n\n\n\n\n\n# Sort by mpg in descending order\nmtcars %&gt;% arrange(desc(mpg))\n\n\nA data.frame: 32 × 11\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nToyota Corolla\n33.9\n4\n71.1\n65\n4.22\n1.835\n19.90\n1\n1\n4\n1\n\n\nFiat 128\n32.4\n4\n78.7\n66\n4.08\n2.200\n19.47\n1\n1\n4\n1\n\n\nHonda Civic\n30.4\n4\n75.7\n52\n4.93\n1.615\n18.52\n1\n1\n4\n2\n\n\nLotus Europa\n30.4\n4\n95.1\n113\n3.77\n1.513\n16.90\n1\n1\n5\n2\n\n\nFiat X1-9\n27.3\n4\n79.0\n66\n4.08\n1.935\n18.90\n1\n1\n4\n1\n\n\nPorsche 914-2\n26.0\n4\n120.3\n91\n4.43\n2.140\n16.70\n0\n1\n5\n2\n\n\nMerc 240D\n24.4\n4\n146.7\n62\n3.69\n3.190\n20.00\n1\n0\n4\n2\n\n\nDatsun 710\n22.8\n4\n108.0\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n\n\nMerc 230\n22.8\n4\n140.8\n95\n3.92\n3.150\n22.90\n1\n0\n4\n2\n\n\nToyota Corona\n21.5\n4\n120.1\n97\n3.70\n2.465\n20.01\n1\n0\n3\n1\n\n\nHornet 4 Drive\n21.4\n6\n258.0\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\nVolvo 142E\n21.4\n4\n121.0\n109\n4.11\n2.780\n18.60\n1\n1\n4\n2\n\n\nMazda RX4\n21.0\n6\n160.0\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160.0\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\nFerrari Dino\n19.7\n6\n145.0\n175\n3.62\n2.770\n15.50\n0\n1\n5\n6\n\n\nMerc 280\n19.2\n6\n167.6\n123\n3.92\n3.440\n18.30\n1\n0\n4\n4\n\n\nPontiac Firebird\n19.2\n8\n400.0\n175\n3.08\n3.845\n17.05\n0\n0\n3\n2\n\n\nHornet Sportabout\n18.7\n8\n360.0\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\n\n\nValiant\n18.1\n6\n225.0\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\n\n\nMerc 280C\n17.8\n6\n167.6\n123\n3.92\n3.440\n18.90\n1\n0\n4\n4\n\n\nMerc 450SL\n17.3\n8\n275.8\n180\n3.07\n3.730\n17.60\n0\n0\n3\n3\n\n\nMerc 450SE\n16.4\n8\n275.8\n180\n3.07\n4.070\n17.40\n0\n0\n3\n3\n\n\nFord Pantera L\n15.8\n8\n351.0\n264\n4.22\n3.170\n14.50\n0\n1\n5\n4\n\n\nDodge Challenger\n15.5\n8\n318.0\n150\n2.76\n3.520\n16.87\n0\n0\n3\n2\n\n\nMerc 450SLC\n15.2\n8\n275.8\n180\n3.07\n3.780\n18.00\n0\n0\n3\n3\n\n\nAMC Javelin\n15.2\n8\n304.0\n150\n3.15\n3.435\n17.30\n0\n0\n3\n2\n\n\nMaserati Bora\n15.0\n8\n301.0\n335\n3.54\n3.570\n14.60\n0\n1\n5\n8\n\n\nChrysler Imperial\n14.7\n8\n440.0\n230\n3.23\n5.345\n17.42\n0\n0\n3\n4\n\n\nDuster 360\n14.3\n8\n360.0\n245\n3.21\n3.570\n15.84\n0\n0\n3\n4\n\n\nCamaro Z28\n13.3\n8\n350.0\n245\n3.73\n3.840\n15.41\n0\n0\n3\n4\n\n\nCadillac Fleetwood\n10.4\n8\n472.0\n205\n2.93\n5.250\n17.98\n0\n0\n3\n4\n\n\nLincoln Continental\n10.4\n8\n460.0\n215\n3.00\n5.424\n17.82\n0\n0\n3\n4\n\n\n\n\n\n\n# Sort by multiple columns\nmtcars %&gt;% arrange(cyl, desc(mpg))\n# It first sorts the data by the 'cyl' (cylinder) column in ascending order.\n# Within each cylinder group, it then sorts by 'mpg' (miles per gallon) in descending order.\n\n\nA data.frame: 32 × 11\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nToyota Corolla\n33.9\n4\n71.1\n65\n4.22\n1.835\n19.90\n1\n1\n4\n1\n\n\nFiat 128\n32.4\n4\n78.7\n66\n4.08\n2.200\n19.47\n1\n1\n4\n1\n\n\nHonda Civic\n30.4\n4\n75.7\n52\n4.93\n1.615\n18.52\n1\n1\n4\n2\n\n\nLotus Europa\n30.4\n4\n95.1\n113\n3.77\n1.513\n16.90\n1\n1\n5\n2\n\n\nFiat X1-9\n27.3\n4\n79.0\n66\n4.08\n1.935\n18.90\n1\n1\n4\n1\n\n\nPorsche 914-2\n26.0\n4\n120.3\n91\n4.43\n2.140\n16.70\n0\n1\n5\n2\n\n\nMerc 240D\n24.4\n4\n146.7\n62\n3.69\n3.190\n20.00\n1\n0\n4\n2\n\n\nDatsun 710\n22.8\n4\n108.0\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n\n\nMerc 230\n22.8\n4\n140.8\n95\n3.92\n3.150\n22.90\n1\n0\n4\n2\n\n\nToyota Corona\n21.5\n4\n120.1\n97\n3.70\n2.465\n20.01\n1\n0\n3\n1\n\n\nVolvo 142E\n21.4\n4\n121.0\n109\n4.11\n2.780\n18.60\n1\n1\n4\n2\n\n\nHornet 4 Drive\n21.4\n6\n258.0\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\nMazda RX4\n21.0\n6\n160.0\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160.0\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\nFerrari Dino\n19.7\n6\n145.0\n175\n3.62\n2.770\n15.50\n0\n1\n5\n6\n\n\nMerc 280\n19.2\n6\n167.6\n123\n3.92\n3.440\n18.30\n1\n0\n4\n4\n\n\nValiant\n18.1\n6\n225.0\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\n\n\nMerc 280C\n17.8\n6\n167.6\n123\n3.92\n3.440\n18.90\n1\n0\n4\n4\n\n\nPontiac Firebird\n19.2\n8\n400.0\n175\n3.08\n3.845\n17.05\n0\n0\n3\n2\n\n\nHornet Sportabout\n18.7\n8\n360.0\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\n\n\nMerc 450SL\n17.3\n8\n275.8\n180\n3.07\n3.730\n17.60\n0\n0\n3\n3\n\n\nMerc 450SE\n16.4\n8\n275.8\n180\n3.07\n4.070\n17.40\n0\n0\n3\n3\n\n\nFord Pantera L\n15.8\n8\n351.0\n264\n4.22\n3.170\n14.50\n0\n1\n5\n4\n\n\nDodge Challenger\n15.5\n8\n318.0\n150\n2.76\n3.520\n16.87\n0\n0\n3\n2\n\n\nMerc 450SLC\n15.2\n8\n275.8\n180\n3.07\n3.780\n18.00\n0\n0\n3\n3\n\n\nAMC Javelin\n15.2\n8\n304.0\n150\n3.15\n3.435\n17.30\n0\n0\n3\n2\n\n\nMaserati Bora\n15.0\n8\n301.0\n335\n3.54\n3.570\n14.60\n0\n1\n5\n8\n\n\nChrysler Imperial\n14.7\n8\n440.0\n230\n3.23\n5.345\n17.42\n0\n0\n3\n4\n\n\nDuster 360\n14.3\n8\n360.0\n245\n3.21\n3.570\n15.84\n0\n0\n3\n4\n\n\nCamaro Z28\n13.3\n8\n350.0\n245\n3.73\n3.840\n15.41\n0\n0\n3\n4\n\n\nCadillac Fleetwood\n10.4\n8\n472.0\n205\n2.93\n5.250\n17.98\n0\n0\n3\n4\n\n\nLincoln Continental\n10.4\n8\n460.0\n215\n3.00\n5.424\n17.82\n0\n0\n3\n4\n\n\n\n\n\n\n\nsummarize()\n\n# Calculate mean mpg\nmtcars %&gt;% summarize(avg_mpg = mean(mpg))\n\n\nA data.frame: 1 × 1\n\n\navg_mpg\n\n\n&lt;dbl&gt;\n\n\n\n\n20.09062\n\n\n\n\n\n\n# Multiple summary statistics\nmtcars %&gt;% summarize(\n  avg_mpg = mean(mpg),\n  max_hp = max(hp),\n  min_wt = min(wt)\n)\n\n\nA data.frame: 1 × 3\n\n\navg_mpg\nmax_hp\nmin_wt\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n20.09062\n335\n1.513\n\n\n\n\n\n\n\n\nAdvanced dplyr Features\n\ngroup_by() with summarize()\n\n# Group by cylinder and calculate mean mpg\nmtcars %&gt;%\n  group_by(cyl) %&gt;%\n  summarize(avg_mpg = mean(mpg))\n\n\nA tibble: 3 × 2\n\n\ncyl\navg_mpg\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n4\n26.66364\n\n\n6\n19.74286\n\n\n8\n15.10000\n\n\n\n\n\n\n# Multiple summary statistics by group\nmtcars %&gt;%\n  group_by(cyl) %&gt;%\n  summarize(\n    avg_mpg = mean(mpg),\n    max_hp = max(hp),\n    count = n()\n  )\n\n\nA tibble: 3 × 4\n\n\ncyl\navg_mpg\nmax_hp\ncount\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;int&gt;\n\n\n\n\n4\n26.66364\n113\n11\n\n\n6\n19.74286\n175\n7\n\n\n8\n15.10000\n335\n14\n\n\n\n\n\n###Joining Operations\n\n# Sample data frames\ndf1 &lt;- data.frame(id = 1:3, value = c(\"a\", \"b\", \"c\"))\ndf2 &lt;- data.frame(id = 2:4, score = c(80, 90, 100))\n\n\n# Inner join\ninner_join(df1, df2, by = \"id\")\n\n\nA data.frame: 2 × 3\n\n\nid\nvalue\nscore\n\n\n&lt;int&gt;\n&lt;chr&gt;\n&lt;dbl&gt;\n\n\n\n\n2\nb\n80\n\n\n3\nc\n90\n\n\n\n\n\n\n# Left join\nleft_join(df1, df2, by = \"id\")\n\n\nA data.frame: 3 × 3\n\n\nid\nvalue\nscore\n\n\n&lt;int&gt;\n&lt;chr&gt;\n&lt;dbl&gt;\n\n\n\n\n1\na\nNA\n\n\n2\nb\n80\n\n\n3\nc\n90\n\n\n\n\n\n\n# Full join\nfull_join(df1, df2, by = \"id\")\n\n\nA data.frame: 4 × 3\n\n\nid\nvalue\nscore\n\n\n&lt;int&gt;\n&lt;chr&gt;\n&lt;dbl&gt;\n\n\n\n\n1\na\nNA\n\n\n2\nb\n80\n\n\n3\nc\n90\n\n\n4\nNA\n100\n\n\n\n\n\n###Window Functions\n\n# Rank cars by mpg within each cylinder group\nmtcars %&gt;%\n  group_by(cyl) %&gt;%\n  mutate(mpg_rank = rank(desc(mpg)))\n\n\nA grouped_df: 32 × 12\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\nmpg_rank\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n21.0\n6\n160.0\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n2.5\n\n\n21.0\n6\n160.0\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n2.5\n\n\n22.8\n4\n108.0\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n8.5\n\n\n21.4\n6\n258.0\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n1.0\n\n\n18.7\n8\n360.0\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\n2.0\n\n\n18.1\n6\n225.0\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\n6.0\n\n\n14.3\n8\n360.0\n245\n3.21\n3.570\n15.84\n0\n0\n3\n4\n11.0\n\n\n24.4\n4\n146.7\n62\n3.69\n3.190\n20.00\n1\n0\n4\n2\n7.0\n\n\n22.8\n4\n140.8\n95\n3.92\n3.150\n22.90\n1\n0\n4\n2\n8.5\n\n\n19.2\n6\n167.6\n123\n3.92\n3.440\n18.30\n1\n0\n4\n4\n5.0\n\n\n17.8\n6\n167.6\n123\n3.92\n3.440\n18.90\n1\n0\n4\n4\n7.0\n\n\n16.4\n8\n275.8\n180\n3.07\n4.070\n17.40\n0\n0\n3\n3\n4.0\n\n\n17.3\n8\n275.8\n180\n3.07\n3.730\n17.60\n0\n0\n3\n3\n3.0\n\n\n15.2\n8\n275.8\n180\n3.07\n3.780\n18.00\n0\n0\n3\n3\n7.5\n\n\n10.4\n8\n472.0\n205\n2.93\n5.250\n17.98\n0\n0\n3\n4\n13.5\n\n\n10.4\n8\n460.0\n215\n3.00\n5.424\n17.82\n0\n0\n3\n4\n13.5\n\n\n14.7\n8\n440.0\n230\n3.23\n5.345\n17.42\n0\n0\n3\n4\n10.0\n\n\n32.4\n4\n78.7\n66\n4.08\n2.200\n19.47\n1\n1\n4\n1\n2.0\n\n\n30.4\n4\n75.7\n52\n4.93\n1.615\n18.52\n1\n1\n4\n2\n3.5\n\n\n33.9\n4\n71.1\n65\n4.22\n1.835\n19.90\n1\n1\n4\n1\n1.0\n\n\n21.5\n4\n120.1\n97\n3.70\n2.465\n20.01\n1\n0\n3\n1\n10.0\n\n\n15.5\n8\n318.0\n150\n2.76\n3.520\n16.87\n0\n0\n3\n2\n6.0\n\n\n15.2\n8\n304.0\n150\n3.15\n3.435\n17.30\n0\n0\n3\n2\n7.5\n\n\n13.3\n8\n350.0\n245\n3.73\n3.840\n15.41\n0\n0\n3\n4\n12.0\n\n\n19.2\n8\n400.0\n175\n3.08\n3.845\n17.05\n0\n0\n3\n2\n1.0\n\n\n27.3\n4\n79.0\n66\n4.08\n1.935\n18.90\n1\n1\n4\n1\n5.0\n\n\n26.0\n4\n120.3\n91\n4.43\n2.140\n16.70\n0\n1\n5\n2\n6.0\n\n\n30.4\n4\n95.1\n113\n3.77\n1.513\n16.90\n1\n1\n5\n2\n3.5\n\n\n15.8\n8\n351.0\n264\n4.22\n3.170\n14.50\n0\n1\n5\n4\n5.0\n\n\n19.7\n6\n145.0\n175\n3.62\n2.770\n15.50\n0\n1\n5\n6\n4.0\n\n\n15.0\n8\n301.0\n335\n3.54\n3.570\n14.60\n0\n1\n5\n8\n9.0\n\n\n21.4\n4\n121.0\n109\n4.11\n2.780\n18.60\n1\n1\n4\n2\n11.0\n\n\n\n\n\n\n# Calculate cumulative sum of hp\nmtcars %&gt;%\n  arrange(hp) %&gt;%\n  mutate(cumulative_hp = cumsum(hp))\n\n\nA data.frame: 32 × 12\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\ncumulative_hp\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nHonda Civic\n30.4\n4\n75.7\n52\n4.93\n1.615\n18.52\n1\n1\n4\n2\n52\n\n\nMerc 240D\n24.4\n4\n146.7\n62\n3.69\n3.190\n20.00\n1\n0\n4\n2\n114\n\n\nToyota Corolla\n33.9\n4\n71.1\n65\n4.22\n1.835\n19.90\n1\n1\n4\n1\n179\n\n\nFiat 128\n32.4\n4\n78.7\n66\n4.08\n2.200\n19.47\n1\n1\n4\n1\n245\n\n\nFiat X1-9\n27.3\n4\n79.0\n66\n4.08\n1.935\n18.90\n1\n1\n4\n1\n311\n\n\nPorsche 914-2\n26.0\n4\n120.3\n91\n4.43\n2.140\n16.70\n0\n1\n5\n2\n402\n\n\nDatsun 710\n22.8\n4\n108.0\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n495\n\n\nMerc 230\n22.8\n4\n140.8\n95\n3.92\n3.150\n22.90\n1\n0\n4\n2\n590\n\n\nToyota Corona\n21.5\n4\n120.1\n97\n3.70\n2.465\n20.01\n1\n0\n3\n1\n687\n\n\nValiant\n18.1\n6\n225.0\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\n792\n\n\nVolvo 142E\n21.4\n4\n121.0\n109\n4.11\n2.780\n18.60\n1\n1\n4\n2\n901\n\n\nMazda RX4\n21.0\n6\n160.0\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n1011\n\n\nMazda RX4 Wag\n21.0\n6\n160.0\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n1121\n\n\nHornet 4 Drive\n21.4\n6\n258.0\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n1231\n\n\nLotus Europa\n30.4\n4\n95.1\n113\n3.77\n1.513\n16.90\n1\n1\n5\n2\n1344\n\n\nMerc 280\n19.2\n6\n167.6\n123\n3.92\n3.440\n18.30\n1\n0\n4\n4\n1467\n\n\nMerc 280C\n17.8\n6\n167.6\n123\n3.92\n3.440\n18.90\n1\n0\n4\n4\n1590\n\n\nDodge Challenger\n15.5\n8\n318.0\n150\n2.76\n3.520\n16.87\n0\n0\n3\n2\n1740\n\n\nAMC Javelin\n15.2\n8\n304.0\n150\n3.15\n3.435\n17.30\n0\n0\n3\n2\n1890\n\n\nHornet Sportabout\n18.7\n8\n360.0\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\n2065\n\n\nPontiac Firebird\n19.2\n8\n400.0\n175\n3.08\n3.845\n17.05\n0\n0\n3\n2\n2240\n\n\nFerrari Dino\n19.7\n6\n145.0\n175\n3.62\n2.770\n15.50\n0\n1\n5\n6\n2415\n\n\nMerc 450SE\n16.4\n8\n275.8\n180\n3.07\n4.070\n17.40\n0\n0\n3\n3\n2595\n\n\nMerc 450SL\n17.3\n8\n275.8\n180\n3.07\n3.730\n17.60\n0\n0\n3\n3\n2775\n\n\nMerc 450SLC\n15.2\n8\n275.8\n180\n3.07\n3.780\n18.00\n0\n0\n3\n3\n2955\n\n\nCadillac Fleetwood\n10.4\n8\n472.0\n205\n2.93\n5.250\n17.98\n0\n0\n3\n4\n3160\n\n\nLincoln Continental\n10.4\n8\n460.0\n215\n3.00\n5.424\n17.82\n0\n0\n3\n4\n3375\n\n\nChrysler Imperial\n14.7\n8\n440.0\n230\n3.23\n5.345\n17.42\n0\n0\n3\n4\n3605\n\n\nDuster 360\n14.3\n8\n360.0\n245\n3.21\n3.570\n15.84\n0\n0\n3\n4\n3850\n\n\nCamaro Z28\n13.3\n8\n350.0\n245\n3.73\n3.840\n15.41\n0\n0\n3\n4\n4095\n\n\nFord Pantera L\n15.8\n8\n351.0\n264\n4.22\n3.170\n14.50\n0\n1\n5\n4\n4359\n\n\nMaserati Bora\n15.0\n8\n301.0\n335\n3.54\n3.570\n14.60\n0\n1\n5\n8\n4694\n\n\n\n\n\n\n\nacross() Function\n\n# Apply the same operation to multiple columns\nmtcars %&gt;%\n  mutate(across(c(mpg, disp, hp), round))\n\n\nA data.frame: 32 × 11\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\nMazda RX4\n21\n6\n160\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\nMazda RX4 Wag\n21\n6\n160\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\nDatsun 710\n23\n4\n108\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n\n\nHornet 4 Drive\n21\n6\n258\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\nHornet Sportabout\n19\n8\n360\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\n\n\nValiant\n18\n6\n225\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\n\n\nDuster 360\n14\n8\n360\n245\n3.21\n3.570\n15.84\n0\n0\n3\n4\n\n\nMerc 240D\n24\n4\n147\n62\n3.69\n3.190\n20.00\n1\n0\n4\n2\n\n\nMerc 230\n23\n4\n141\n95\n3.92\n3.150\n22.90\n1\n0\n4\n2\n\n\nMerc 280\n19\n6\n168\n123\n3.92\n3.440\n18.30\n1\n0\n4\n4\n\n\nMerc 280C\n18\n6\n168\n123\n3.92\n3.440\n18.90\n1\n0\n4\n4\n\n\nMerc 450SE\n16\n8\n276\n180\n3.07\n4.070\n17.40\n0\n0\n3\n3\n\n\nMerc 450SL\n17\n8\n276\n180\n3.07\n3.730\n17.60\n0\n0\n3\n3\n\n\nMerc 450SLC\n15\n8\n276\n180\n3.07\n3.780\n18.00\n0\n0\n3\n3\n\n\nCadillac Fleetwood\n10\n8\n472\n205\n2.93\n5.250\n17.98\n0\n0\n3\n4\n\n\nLincoln Continental\n10\n8\n460\n215\n3.00\n5.424\n17.82\n0\n0\n3\n4\n\n\nChrysler Imperial\n15\n8\n440\n230\n3.23\n5.345\n17.42\n0\n0\n3\n4\n\n\nFiat 128\n32\n4\n79\n66\n4.08\n2.200\n19.47\n1\n1\n4\n1\n\n\nHonda Civic\n30\n4\n76\n52\n4.93\n1.615\n18.52\n1\n1\n4\n2\n\n\nToyota Corolla\n34\n4\n71\n65\n4.22\n1.835\n19.90\n1\n1\n4\n1\n\n\nToyota Corona\n22\n4\n120\n97\n3.70\n2.465\n20.01\n1\n0\n3\n1\n\n\nDodge Challenger\n16\n8\n318\n150\n2.76\n3.520\n16.87\n0\n0\n3\n2\n\n\nAMC Javelin\n15\n8\n304\n150\n3.15\n3.435\n17.30\n0\n0\n3\n2\n\n\nCamaro Z28\n13\n8\n350\n245\n3.73\n3.840\n15.41\n0\n0\n3\n4\n\n\nPontiac Firebird\n19\n8\n400\n175\n3.08\n3.845\n17.05\n0\n0\n3\n2\n\n\nFiat X1-9\n27\n4\n79\n66\n4.08\n1.935\n18.90\n1\n1\n4\n1\n\n\nPorsche 914-2\n26\n4\n120\n91\n4.43\n2.140\n16.70\n0\n1\n5\n2\n\n\nLotus Europa\n30\n4\n95\n113\n3.77\n1.513\n16.90\n1\n1\n5\n2\n\n\nFord Pantera L\n16\n8\n351\n264\n4.22\n3.170\n14.50\n0\n1\n5\n4\n\n\nFerrari Dino\n20\n6\n145\n175\n3.62\n2.770\n15.50\n0\n1\n5\n6\n\n\nMaserati Bora\n15\n8\n301\n335\n3.54\n3.570\n14.60\n0\n1\n5\n8\n\n\nVolvo 142E\n21\n4\n121\n109\n4.11\n2.780\n18.60\n1\n1\n4\n2\n\n\n\n\n\n\n# Summarize multiple columns\nmtcars %&gt;%\n  group_by(cyl) %&gt;%\n  summarize(across(c(mpg, disp, hp), list(mean = mean, sd = sd)))\n\n\nA tibble: 3 × 7\n\n\ncyl\nmpg_mean\nmpg_sd\ndisp_mean\ndisp_sd\nhp_mean\nhp_sd\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n\n\n\n\n4\n26.66364\n4.509828\n105.1364\n26.87159\n82.63636\n20.93453\n\n\n6\n19.74286\n1.453567\n183.3143\n41.56246\n122.28571\n24.26049\n\n\n8\n15.10000\n2.560048\n353.1000\n67.77132\n209.21429\n50.97689\n\n\n\n\n\n\n\ncase_when() for Complex Conditions\n\nmtcars %&gt;%\n  mutate(size = case_when(\n    hp &lt; 100 ~ \"small\",\n    hp &gt;= 100 & hp &lt; 200 ~ \"medium\",\n    hp &gt;= 200 ~ \"large\"\n  ))\n#When you need to evaluate multiple complex conditions you can use mutate\n\n\nA data.frame: 32 × 12\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\nsize\n\n\n\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;dbl&gt;\n&lt;chr&gt;\n\n\n\n\nMazda RX4\n21.0\n6\n160.0\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\nmedium\n\n\nMazda RX4 Wag\n21.0\n6\n160.0\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\nmedium\n\n\nDatsun 710\n22.8\n4\n108.0\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\nsmall\n\n\nHornet 4 Drive\n21.4\n6\n258.0\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\nmedium\n\n\nHornet Sportabout\n18.7\n8\n360.0\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\nmedium\n\n\nValiant\n18.1\n6\n225.0\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\nmedium\n\n\nDuster 360\n14.3\n8\n360.0\n245\n3.21\n3.570\n15.84\n0\n0\n3\n4\nlarge\n\n\nMerc 240D\n24.4\n4\n146.7\n62\n3.69\n3.190\n20.00\n1\n0\n4\n2\nsmall\n\n\nMerc 230\n22.8\n4\n140.8\n95\n3.92\n3.150\n22.90\n1\n0\n4\n2\nsmall\n\n\nMerc 280\n19.2\n6\n167.6\n123\n3.92\n3.440\n18.30\n1\n0\n4\n4\nmedium\n\n\nMerc 280C\n17.8\n6\n167.6\n123\n3.92\n3.440\n18.90\n1\n0\n4\n4\nmedium\n\n\nMerc 450SE\n16.4\n8\n275.8\n180\n3.07\n4.070\n17.40\n0\n0\n3\n3\nmedium\n\n\nMerc 450SL\n17.3\n8\n275.8\n180\n3.07\n3.730\n17.60\n0\n0\n3\n3\nmedium\n\n\nMerc 450SLC\n15.2\n8\n275.8\n180\n3.07\n3.780\n18.00\n0\n0\n3\n3\nmedium\n\n\nCadillac Fleetwood\n10.4\n8\n472.0\n205\n2.93\n5.250\n17.98\n0\n0\n3\n4\nlarge\n\n\nLincoln Continental\n10.4\n8\n460.0\n215\n3.00\n5.424\n17.82\n0\n0\n3\n4\nlarge\n\n\nChrysler Imperial\n14.7\n8\n440.0\n230\n3.23\n5.345\n17.42\n0\n0\n3\n4\nlarge\n\n\nFiat 128\n32.4\n4\n78.7\n66\n4.08\n2.200\n19.47\n1\n1\n4\n1\nsmall\n\n\nHonda Civic\n30.4\n4\n75.7\n52\n4.93\n1.615\n18.52\n1\n1\n4\n2\nsmall\n\n\nToyota Corolla\n33.9\n4\n71.1\n65\n4.22\n1.835\n19.90\n1\n1\n4\n1\nsmall\n\n\nToyota Corona\n21.5\n4\n120.1\n97\n3.70\n2.465\n20.01\n1\n0\n3\n1\nsmall\n\n\nDodge Challenger\n15.5\n8\n318.0\n150\n2.76\n3.520\n16.87\n0\n0\n3\n2\nmedium\n\n\nAMC Javelin\n15.2\n8\n304.0\n150\n3.15\n3.435\n17.30\n0\n0\n3\n2\nmedium\n\n\nCamaro Z28\n13.3\n8\n350.0\n245\n3.73\n3.840\n15.41\n0\n0\n3\n4\nlarge\n\n\nPontiac Firebird\n19.2\n8\n400.0\n175\n3.08\n3.845\n17.05\n0\n0\n3\n2\nmedium\n\n\nFiat X1-9\n27.3\n4\n79.0\n66\n4.08\n1.935\n18.90\n1\n1\n4\n1\nsmall\n\n\nPorsche 914-2\n26.0\n4\n120.3\n91\n4.43\n2.140\n16.70\n0\n1\n5\n2\nsmall\n\n\nLotus Europa\n30.4\n4\n95.1\n113\n3.77\n1.513\n16.90\n1\n1\n5\n2\nmedium\n\n\nFord Pantera L\n15.8\n8\n351.0\n264\n4.22\n3.170\n14.50\n0\n1\n5\n4\nlarge\n\n\nFerrari Dino\n19.7\n6\n145.0\n175\n3.62\n2.770\n15.50\n0\n1\n5\n6\nmedium\n\n\nMaserati Bora\n15.0\n8\n301.0\n335\n3.54\n3.570\n14.60\n0\n1\n5\n8\nlarge\n\n\nVolvo 142E\n21.4\n4\n121.0\n109\n4.11\n2.780\n18.60\n1\n1\n4\n2\nmedium\n\n\n\n\n\n\n\nHandling Missing Values\n\n# Replace specific values with NA\ndf &lt;- data.frame(x = c(1, 2, -99, 4, 5))\ndf %&gt;% mutate(x = na_if(x, -99))\n\n\nA data.frame: 5 × 1\n\n\nx\n\n\n&lt;dbl&gt;\n\n\n\n\n1\n\n\n2\n\n\nNA\n\n\n4\n\n\n5\n\n\n\n\n\n\n# Remove rows with any NA\ndf %&gt;% filter(!if_any(everything(), is.na))\n\n\nA data.frame: 5 × 1\n\n\nx\n\n\n&lt;dbl&gt;\n\n\n\n\n1\n\n\n2\n\n\n-99\n\n\n4\n\n\n5"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Mastering Data Manipulation in R with dplyr",
    "section": "",
    "text": "Introduction\nYou will find here blog entries done by the members of J018 - Arav Patil, Prajwal Patil & Abhinav Thakur. To explore them, click on the blog icon on the top right corner.\n\n\n\nConclusion\ndplyr is a fundamental package in R that enables fast and intuitive data manipulation. Its syntax-friendly interface and performance-optimized functions make it the go-to option for data analysts and researchers from diverse fields. Through the utilization of its primary functions—filter(), select(), mutate(), group_by(), summarise(), and arrange()—users can conveniently clean, convert, and examine big datasets with less effort.\nOverall, dplyr improves efficiency, streamlines data handling, and makes working with complex data easy. From academic research to industrial use and even personal endeavors, it is an invaluable asset for anyone working with structured data in R.\n\n\n\nReferences & Further Readings\n\ndplyrCheat Sheet (RStudio) - Handy reference for quick lookups."
  }
]